/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* top =  1  *)
(* src = "synth_RRTX.v:17" *)
module synth_RRTX(data_rx0_synt, data_rx1_synt, data_rx2_synt, data_rx3_synt, valid_rx0_synt, valid_rx1_synt, valid_rx2_synt, valid_rx3_synt, active_synt, inserter_synt, IDLE_OUT_synt, data_0rp_synt, data_1rp_synt, data_2rp_synt, data_3rp_synt, valid_0rp_synt, valid_1rp_synt, valid_2rp_synt, valid_3rp_synt, data_0p, data_1p, data_2p, data_3p, valid_0p, valid_1p, clk_4f, valid_2p, valid_3p, clk_f, clk_2f, clk_32f, reset);
  (* src = "synth_RRTX.v:22" *)
  output IDLE_OUT_synt;
  (* src = "synth_RRTX.v:21" *)
  output active_synt;
  (* src = "synth_RRTX.v:31" *)
  input clk_2f;
  (* src = "synth_RRTX.v:32" *)
  input clk_32f;
  (* src = "synth_RRTX.v:30" *)
  input clk_4f;
  (* src = "synth_RRTX.v:31" *)
  input clk_f;
  (* src = "synth_RRTX.v:36" *)
  wire [7:0] data_0_synt;
  (* src = "synth_RRTX.v:37" *)
  wire [7:0] data_00_synt;
  (* src = "synth_RRTX.v:38" *)
  wire [7:0] data_000_synt;
  (* src = "synth_RRTX.v:28" *)
  input [7:0] data_0p;
  (* src = "synth_RRTX.v:39" *)
  wire [7:0] data_0ps_synt;
  (* src = "synth_RRTX.v:40" *)
  wire [7:0] data_0rf_synt;
  (* src = "synth_RRTX.v:24" *)
  output [7:0] data_0rp_synt;
  (* src = "synth_RRTX.v:41" *)
  wire [7:0] data_1_synt;
  (* src = "synth_RRTX.v:42" *)
  wire [7:0] data_11_synt;
  (* src = "synth_RRTX.v:28" *)
  input [7:0] data_1p;
  (* src = "synth_RRTX.v:43" *)
  wire [7:0] data_1ps_synt;
  (* src = "synth_RRTX.v:44" *)
  wire [7:0] data_1rf_synt;
  (* src = "synth_RRTX.v:24" *)
  output [7:0] data_1rp_synt;
  (* src = "synth_RRTX.v:45" *)
  wire [7:0] data_2_synt;
  (* src = "synth_RRTX.v:29" *)
  input [7:0] data_2p;
  (* src = "synth_RRTX.v:46" *)
  wire [7:0] data_2ps_synt;
  (* src = "synth_RRTX.v:47" *)
  wire [7:0] data_2rf_synt;
  (* src = "synth_RRTX.v:25" *)
  output [7:0] data_2rp_synt;
  (* src = "synth_RRTX.v:48" *)
  wire [7:0] data_3_synt;
  (* src = "synth_RRTX.v:29" *)
  input [7:0] data_3p;
  (* src = "synth_RRTX.v:49" *)
  wire [7:0] data_3ps_synt;
  (* src = "synth_RRTX.v:50" *)
  wire [7:0] data_3rf_synt;
  (* src = "synth_RRTX.v:25" *)
  output [7:0] data_3rp_synt;
  (* src = "synth_RRTX.v:51" *)
  wire data_out_synt;
  (* src = "synth_RRTX.v:17" *)
  output [7:0] data_rx0_synt;
  (* src = "synth_RRTX.v:52" *)
  wire [7:0] data_rx00_synt;
  (* src = "synth_RRTX.v:53" *)
  wire [7:0] data_rx000_synt;
  (* src = "synth_RRTX.v:54" *)
  wire [7:0] data_rx00s_synt;
  (* src = "synth_RRTX.v:17" *)
  output [7:0] data_rx1_synt;
  (* src = "synth_RRTX.v:55" *)
  wire [7:0] data_rx11_synt;
  (* src = "synth_RRTX.v:56" *)
  wire [7:0] data_rx11s_synt;
  (* src = "synth_RRTX.v:18" *)
  output [7:0] data_rx2_synt;
  (* src = "synth_RRTX.v:18" *)
  output [7:0] data_rx3_synt;
  (* src = "synth_RRTX.v:21" *)
  output inserter_synt;
  (* src = "synth_RRTX.v:32" *)
  input reset;
  (* src = "synth_RRTX.v:57" *)
  wire valid_0_synt;
  (* src = "synth_RRTX.v:58" *)
  wire valid_00_synt;
  (* src = "synth_RRTX.v:59" *)
  wire valid_000_synt;
  (* src = "synth_RRTX.v:30" *)
  input valid_0p;
  (* src = "synth_RRTX.v:60" *)
  wire valid_0ps_synt;
  (* src = "synth_RRTX.v:61" *)
  wire valid_0rf_synt;
  (* src = "synth_RRTX.v:26" *)
  output valid_0rp_synt;
  (* src = "synth_RRTX.v:62" *)
  wire valid_1_synt;
  (* src = "synth_RRTX.v:63" *)
  wire valid_11_synt;
  (* src = "synth_RRTX.v:30" *)
  input valid_1p;
  (* src = "synth_RRTX.v:64" *)
  wire valid_1ps_synt;
  (* src = "synth_RRTX.v:65" *)
  wire valid_1rf_synt;
  (* src = "synth_RRTX.v:26" *)
  output valid_1rp_synt;
  (* src = "synth_RRTX.v:66" *)
  wire valid_2_synt;
  (* src = "synth_RRTX.v:31" *)
  input valid_2p;
  (* src = "synth_RRTX.v:67" *)
  wire valid_2ps_synt;
  (* src = "synth_RRTX.v:68" *)
  wire valid_2rf_synt;
  (* src = "synth_RRTX.v:27" *)
  output valid_2rp_synt;
  (* src = "synth_RRTX.v:69" *)
  wire valid_3_synt;
  (* src = "synth_RRTX.v:31" *)
  input valid_3p;
  (* src = "synth_RRTX.v:70" *)
  wire valid_3ps_synt;
  (* src = "synth_RRTX.v:71" *)
  wire valid_3rf_synt;
  (* src = "synth_RRTX.v:27" *)
  output valid_3rp_synt;
  (* src = "synth_RRTX.v:19" *)
  output valid_rx0_synt;
  (* src = "synth_RRTX.v:72" *)
  wire valid_rx00_synt;
  (* src = "synth_RRTX.v:73" *)
  wire valid_rx000_synt;
  (* src = "synth_RRTX.v:74" *)
  wire valid_rx00s_synt;
  (* src = "synth_RRTX.v:19" *)
  output valid_rx1_synt;
  (* src = "synth_RRTX.v:75" *)
  wire valid_rx11_synt;
  (* src = "synth_RRTX.v:76" *)
  wire valid_rx11s_synt;
  (* src = "synth_RRTX.v:20" *)
  output valid_rx2_synt;
  (* src = "synth_RRTX.v:20" *)
  output valid_rx3_synt;
  (* module_not_derived = 32'd1 *)
  (* src = "synth_RRTX.v:237" *)
  synth_demux2x4_8bits DEMUXL1_COND (
    .clk_2f(clk_2f),
    .clk_f(clk_f),
    .data_rx0_synt(data_rx0_synt),
    .data_rx00s_synt(data_rx00s_synt),
    .data_rx1_synt(data_rx1_synt),
    .data_rx11s_synt(data_rx11s_synt),
    .data_rx2_synt(data_rx2_synt),
    .data_rx3_synt(data_rx3_synt),
    .reset(reset),
    .valid_rx0_synt(valid_rx0_synt),
    .valid_rx00s_synt(valid_rx00s_synt),
    .valid_rx1_synt(valid_rx1_synt),
    .valid_rx11s_synt(valid_rx11s_synt),
    .valid_rx2_synt(valid_rx2_synt),
    .valid_rx3_synt(valid_rx3_synt)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth_RRTX.v:213" *)
  synth_demux1x2_8bits DEMUXL2_COND (
    .clk_2f(clk_2f),
    .clk_4f(clk_4f),
    .data_rx00_synt(data_rx00_synt),
    .data_rx000_synt(data_rx000_synt),
    .data_rx11_synt(data_rx11_synt),
    .reset(reset),
    .valid_rx00_synt(valid_rx00_synt),
    .valid_rx000_synt(valid_rx000_synt),
    .valid_rx11_synt(valid_rx11_synt)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth_RRTX.v:79" *)
  synth_etapaflops1 FLOPS1_COND (
    .clk_f(clk_f),
    .data_0p(data_0p),
    .data_0ps_synt(data_0ps_synt),
    .data_1p(data_1p),
    .data_1ps_synt(data_1ps_synt),
    .data_2p(data_2p),
    .data_2ps_synt(data_2ps_synt),
    .data_3p(data_3p),
    .data_3ps_synt(data_3ps_synt),
    .valid_0p(valid_0p),
    .valid_0ps_synt(valid_0ps_synt),
    .valid_1p(valid_1p),
    .valid_1ps_synt(valid_1ps_synt),
    .valid_2p(valid_2p),
    .valid_2ps_synt(valid_2ps_synt),
    .valid_3p(valid_3p),
    .valid_3ps_synt(valid_3ps_synt)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth_RRTX.v:127" *)
  synth_etapaflops2 FLOPS2_COND (
    .clk_f(clk_f),
    .data_0_synt(data_0_synt),
    .data_0rf_synt(data_0rf_synt),
    .data_1_synt(data_1_synt),
    .data_1rf_synt(data_1rf_synt),
    .data_2_synt(data_2_synt),
    .data_2rf_synt(data_2rf_synt),
    .data_3_synt(data_3_synt),
    .data_3rf_synt(data_3rf_synt),
    .valid_0_synt(valid_0_synt),
    .valid_0rf_synt(valid_0rf_synt),
    .valid_1_synt(valid_1_synt),
    .valid_1rf_synt(valid_1rf_synt),
    .valid_2_synt(valid_2_synt),
    .valid_2rf_synt(valid_2rf_synt),
    .valid_3_synt(valid_3_synt),
    .valid_3rf_synt(valid_3rf_synt)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth_RRTX.v:225" *)
  synth_etapaflops3 FLOPS3_COND (
    .clk_2f(clk_2f),
    .data_rx00_synt(data_rx00_synt),
    .data_rx00s_synt(data_rx00s_synt),
    .data_rx11_synt(data_rx11_synt),
    .data_rx11s_synt(data_rx11s_synt),
    .valid_rx00_synt(valid_rx00_synt),
    .valid_rx00s_synt(valid_rx00s_synt),
    .valid_rx11_synt(valid_rx11_synt),
    .valid_rx11s_synt(valid_rx11s_synt)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth_RRTX.v:147" *)
  synth_mux4x2_8bits MUXL1_COND (
    .clk_2f(clk_2f),
    .clk_f(clk_f),
    .data_0_synt(data_0_synt),
    .data_00_synt(data_00_synt),
    .data_1_synt(data_1_synt),
    .data_11_synt(data_11_synt),
    .data_2_synt(data_2_synt),
    .data_3_synt(data_3_synt),
    .reset(reset),
    .valid_0_synt(valid_0_synt),
    .valid_00_synt(valid_00_synt),
    .valid_1_synt(valid_1_synt),
    .valid_11_synt(valid_11_synt),
    .valid_2_synt(valid_2_synt),
    .valid_3_synt(valid_3_synt)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth_RRTX.v:165" *)
  synth_mux2x1_8bits MUXL2_COND (
    .clk_2f(clk_2f),
    .clk_4f(clk_4f),
    .data_00_synt(data_00_synt),
    .data_000_synt(data_000_synt),
    .data_11_synt(data_11_synt),
    .reset(reset),
    .valid_00_synt(valid_00_synt),
    .valid_000_synt(valid_000_synt),
    .valid_11_synt(valid_11_synt)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth_RRTX.v:177" *)
  synth_paralelo_serial1 PARSER1_COND (
    .clk_32f(clk_32f),
    .clk_4f(clk_4f),
    .data_000_synt(data_000_synt),
    .data_out_synt(data_out_synt),
    .reset(reset),
    .valid_000_synt(valid_000_synt)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth_RRTX.v:196" *)
  synth_paralelo_serial2 PARSER2_COND (
    .active_synt(active_synt),
    .clk_32f(clk_32f),
    .clk_4f(clk_4f),
    .inserter_synt(inserter_synt),
    .reset(reset)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth_RRTX.v:99" *)
  synth_recirculacion RECIRCULACION_COND (
    .IDLE_OUT_synt(IDLE_OUT_synt),
    .data_0ps_synt(data_0ps_synt),
    .data_0rf_synt(data_0rf_synt),
    .data_0rp_synt(data_0rp_synt),
    .data_1ps_synt(data_1ps_synt),
    .data_1rf_synt(data_1rf_synt),
    .data_1rp_synt(data_1rp_synt),
    .data_2ps_synt(data_2ps_synt),
    .data_2rf_synt(data_2rf_synt),
    .data_2rp_synt(data_2rp_synt),
    .data_3ps_synt(data_3ps_synt),
    .data_3rf_synt(data_3rf_synt),
    .data_3rp_synt(data_3rp_synt),
    .valid_0ps_synt(valid_0ps_synt),
    .valid_0rf_synt(valid_0rf_synt),
    .valid_0rp_synt(valid_0rp_synt),
    .valid_1ps_synt(valid_1ps_synt),
    .valid_1rf_synt(valid_1rf_synt),
    .valid_1rp_synt(valid_1rp_synt),
    .valid_2ps_synt(valid_2ps_synt),
    .valid_2rf_synt(valid_2rf_synt),
    .valid_2rp_synt(valid_2rp_synt),
    .valid_3ps_synt(valid_3ps_synt),
    .valid_3rf_synt(valid_3rf_synt),
    .valid_3rp_synt(valid_3rp_synt)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth_RRTX.v:186" *)
  synth_serial_paralelo1 SERPAR1_COND (
    .active_synt(active_synt),
    .clk_32f(clk_32f),
    .clk_4f(clk_4f),
    .data_out_synt(data_out_synt),
    .data_rx000_synt(data_rx000_synt),
    .reset(reset),
    .valid_rx000_synt(valid_rx000_synt)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "synth_RRTX.v:204" *)
  synth_serial_paralelo2 SERPAR2_COND (
    .IDLE_OUT_synt(IDLE_OUT_synt),
    .clk_32f(clk_32f),
    .clk_4f(clk_4f),
    .clk_f(clk_f),
    .inserter_synt(inserter_synt),
    .reset(reset)
  );
endmodule

(* src = "synth_demux1x2_8bits.v:10" *)
module synth_demux1x2_8bits(data_rx00_synt, data_rx11_synt, valid_rx00_synt, valid_rx11_synt, data_rx000_synt, valid_rx000_synt, clk_2f, clk_4f, reset);
  (* src = "synth_demux1x2_8bits.v:43" *)
  wire [7:0] _000_;
  (* src = "synth_demux1x2_8bits.v:43" *)
  wire [7:0] _001_;
  (* src = "synth_demux1x2_8bits.v:27" *)
  wire [8:0] _002_;
  (* src = "synth_demux1x2_8bits.v:27" *)
  wire [8:0] _003_;
  (* src = "synth_demux1x2_8bits.v:43" *)
  wire _004_;
  (* src = "synth_demux1x2_8bits.v:43" *)
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  (* src = "synth_demux1x2_8bits.v:14" *)
  input clk_2f;
  (* src = "synth_demux1x2_8bits.v:17" *)
  wire clk_2f_s;
  (* src = "synth_demux1x2_8bits.v:14" *)
  input clk_4f;
  (* src = "synth_demux1x2_8bits.v:10" *)
  output [7:0] data_rx00_synt;
  (* src = "synth_demux1x2_8bits.v:12" *)
  input [7:0] data_rx000_synt;
  (* src = "synth_demux1x2_8bits.v:10" *)
  output [7:0] data_rx11_synt;
  (* src = "synth_demux1x2_8bits.v:16" *)
  wire [8:0] paq_00;
  (* src = "synth_demux1x2_8bits.v:16" *)
  wire [8:0] paq_11;
  (* src = "synth_demux1x2_8bits.v:14" *)
  input reset;
  (* src = "synth_demux1x2_8bits.v:17" *)
  wire reset_s;
  (* src = "synth_demux1x2_8bits.v:11" *)
  output valid_rx00_synt;
  (* src = "synth_demux1x2_8bits.v:13" *)
  input valid_rx000_synt;
  (* src = "synth_demux1x2_8bits.v:11" *)
  output valid_rx11_synt;
  NOT _168_ (
    .A(paq_11[1]),
    .Y(_024_)
  );
  NOT _169_ (
    .A(data_rx11_synt[0]),
    .Y(_025_)
  );
  NOT _170_ (
    .A(paq_11[2]),
    .Y(_026_)
  );
  NOT _171_ (
    .A(data_rx11_synt[1]),
    .Y(_027_)
  );
  NOT _172_ (
    .A(paq_11[3]),
    .Y(_028_)
  );
  NOT _173_ (
    .A(data_rx11_synt[2]),
    .Y(_029_)
  );
  NOT _174_ (
    .A(paq_11[4]),
    .Y(_030_)
  );
  NOT _175_ (
    .A(data_rx11_synt[3]),
    .Y(_031_)
  );
  NOT _176_ (
    .A(paq_11[5]),
    .Y(_032_)
  );
  NOT _177_ (
    .A(data_rx11_synt[4]),
    .Y(_033_)
  );
  NOT _178_ (
    .A(paq_11[6]),
    .Y(_034_)
  );
  NOT _179_ (
    .A(data_rx11_synt[5]),
    .Y(_035_)
  );
  NOT _180_ (
    .A(paq_11[7]),
    .Y(_036_)
  );
  NOT _181_ (
    .A(data_rx11_synt[6]),
    .Y(_037_)
  );
  NOT _182_ (
    .A(paq_11[8]),
    .Y(_038_)
  );
  NOT _183_ (
    .A(data_rx11_synt[7]),
    .Y(_039_)
  );
  NOT _184_ (
    .A(data_rx00_synt[0]),
    .Y(_040_)
  );
  NOT _185_ (
    .A(data_rx00_synt[1]),
    .Y(_041_)
  );
  NOT _186_ (
    .A(data_rx00_synt[2]),
    .Y(_042_)
  );
  NOT _187_ (
    .A(data_rx00_synt[3]),
    .Y(_043_)
  );
  NOT _188_ (
    .A(data_rx00_synt[4]),
    .Y(_044_)
  );
  NOT _189_ (
    .A(data_rx00_synt[5]),
    .Y(_045_)
  );
  NOT _190_ (
    .A(data_rx00_synt[6]),
    .Y(_046_)
  );
  NOT _191_ (
    .A(data_rx00_synt[7]),
    .Y(_047_)
  );
  NOT _192_ (
    .A(valid_rx00_synt),
    .Y(_048_)
  );
  NOT _193_ (
    .A(valid_rx000_synt),
    .Y(_049_)
  );
  NOT _194_ (
    .A(paq_11[0]),
    .Y(_050_)
  );
  NOT _195_ (
    .A(data_rx000_synt[0]),
    .Y(_051_)
  );
  NOT _196_ (
    .A(data_rx000_synt[1]),
    .Y(_052_)
  );
  NOT _197_ (
    .A(data_rx000_synt[2]),
    .Y(_053_)
  );
  NOT _198_ (
    .A(data_rx000_synt[3]),
    .Y(_054_)
  );
  NOT _199_ (
    .A(data_rx000_synt[4]),
    .Y(_055_)
  );
  NOT _200_ (
    .A(data_rx000_synt[5]),
    .Y(_056_)
  );
  NOT _201_ (
    .A(data_rx000_synt[6]),
    .Y(_057_)
  );
  NOT _202_ (
    .A(data_rx000_synt[7]),
    .Y(_058_)
  );
  NOT _203_ (
    .A(valid_rx11_synt),
    .Y(_059_)
  );
  NOT _204_ (
    .A(clk_4f),
    .Y(_006_)
  );
  NOR _205_ (
    .A(clk_2f_s),
    .B(paq_11[2]),
    .Y(_060_)
  );
  NAND _206_ (
    .A(clk_2f_s),
    .B(_027_),
    .Y(_061_)
  );
  NAND _207_ (
    .A(reset_s),
    .B(_061_),
    .Y(_062_)
  );
  NOR _208_ (
    .A(_060_),
    .B(_062_),
    .Y(_001_[1])
  );
  NOR _209_ (
    .A(clk_2f_s),
    .B(paq_11[3]),
    .Y(_063_)
  );
  NAND _210_ (
    .A(clk_2f_s),
    .B(_029_),
    .Y(_064_)
  );
  NAND _211_ (
    .A(reset_s),
    .B(_064_),
    .Y(_065_)
  );
  NOR _212_ (
    .A(_063_),
    .B(_065_),
    .Y(_001_[2])
  );
  NOR _213_ (
    .A(clk_2f_s),
    .B(paq_11[4]),
    .Y(_066_)
  );
  NAND _214_ (
    .A(clk_2f_s),
    .B(_031_),
    .Y(_067_)
  );
  NAND _215_ (
    .A(reset_s),
    .B(_067_),
    .Y(_068_)
  );
  NOR _216_ (
    .A(_066_),
    .B(_068_),
    .Y(_001_[3])
  );
  NOR _217_ (
    .A(clk_2f_s),
    .B(paq_11[5]),
    .Y(_069_)
  );
  NAND _218_ (
    .A(clk_2f_s),
    .B(_033_),
    .Y(_070_)
  );
  NAND _219_ (
    .A(reset_s),
    .B(_070_),
    .Y(_071_)
  );
  NOR _220_ (
    .A(_069_),
    .B(_071_),
    .Y(_001_[4])
  );
  NOR _221_ (
    .A(clk_2f_s),
    .B(paq_11[6]),
    .Y(_072_)
  );
  NAND _222_ (
    .A(clk_2f_s),
    .B(_035_),
    .Y(_073_)
  );
  NAND _223_ (
    .A(reset_s),
    .B(_073_),
    .Y(_074_)
  );
  NOR _224_ (
    .A(_072_),
    .B(_074_),
    .Y(_001_[5])
  );
  NOR _225_ (
    .A(clk_2f_s),
    .B(paq_11[7]),
    .Y(_075_)
  );
  NAND _226_ (
    .A(clk_2f_s),
    .B(_037_),
    .Y(_076_)
  );
  NAND _227_ (
    .A(reset_s),
    .B(_076_),
    .Y(_077_)
  );
  NOR _228_ (
    .A(_075_),
    .B(_077_),
    .Y(_001_[6])
  );
  NOR _229_ (
    .A(clk_2f_s),
    .B(paq_11[8]),
    .Y(_078_)
  );
  NAND _230_ (
    .A(clk_2f_s),
    .B(_039_),
    .Y(_079_)
  );
  NAND _231_ (
    .A(reset_s),
    .B(_079_),
    .Y(_080_)
  );
  NOR _232_ (
    .A(_078_),
    .B(_080_),
    .Y(_001_[7])
  );
  NOR _233_ (
    .A(clk_2f_s),
    .B(paq_00[0]),
    .Y(_081_)
  );
  NAND _234_ (
    .A(clk_2f_s),
    .B(_048_),
    .Y(_082_)
  );
  NAND _235_ (
    .A(reset_s),
    .B(_082_),
    .Y(_083_)
  );
  NOR _236_ (
    .A(_081_),
    .B(_083_),
    .Y(_004_)
  );
  NOR _237_ (
    .A(clk_2f_s),
    .B(paq_00[1]),
    .Y(_084_)
  );
  NAND _238_ (
    .A(clk_2f_s),
    .B(_040_),
    .Y(_085_)
  );
  NAND _239_ (
    .A(reset_s),
    .B(_085_),
    .Y(_086_)
  );
  NOR _240_ (
    .A(_084_),
    .B(_086_),
    .Y(_000_[0])
  );
  NOR _241_ (
    .A(clk_2f_s),
    .B(paq_00[2]),
    .Y(_087_)
  );
  NAND _242_ (
    .A(clk_2f_s),
    .B(_041_),
    .Y(_088_)
  );
  NAND _243_ (
    .A(reset_s),
    .B(_088_),
    .Y(_089_)
  );
  NOR _244_ (
    .A(_087_),
    .B(_089_),
    .Y(_000_[1])
  );
  NOR _245_ (
    .A(clk_2f_s),
    .B(paq_00[3]),
    .Y(_090_)
  );
  NAND _246_ (
    .A(clk_2f_s),
    .B(_042_),
    .Y(_091_)
  );
  NAND _247_ (
    .A(reset_s),
    .B(_091_),
    .Y(_092_)
  );
  NOR _248_ (
    .A(_090_),
    .B(_092_),
    .Y(_000_[2])
  );
  NOR _249_ (
    .A(clk_2f_s),
    .B(paq_00[4]),
    .Y(_093_)
  );
  NAND _250_ (
    .A(clk_2f_s),
    .B(_043_),
    .Y(_094_)
  );
  NAND _251_ (
    .A(reset_s),
    .B(_094_),
    .Y(_095_)
  );
  NOR _252_ (
    .A(_093_),
    .B(_095_),
    .Y(_000_[3])
  );
  NOR _253_ (
    .A(clk_2f_s),
    .B(paq_00[5]),
    .Y(_096_)
  );
  NAND _254_ (
    .A(clk_2f_s),
    .B(_044_),
    .Y(_097_)
  );
  NAND _255_ (
    .A(reset_s),
    .B(_097_),
    .Y(_098_)
  );
  NOR _256_ (
    .A(_096_),
    .B(_098_),
    .Y(_000_[4])
  );
  NOR _257_ (
    .A(clk_2f_s),
    .B(paq_00[6]),
    .Y(_099_)
  );
  NAND _258_ (
    .A(clk_2f_s),
    .B(_045_),
    .Y(_100_)
  );
  NAND _259_ (
    .A(reset_s),
    .B(_100_),
    .Y(_101_)
  );
  NOR _260_ (
    .A(_099_),
    .B(_101_),
    .Y(_000_[5])
  );
  NOR _261_ (
    .A(clk_2f_s),
    .B(paq_00[7]),
    .Y(_102_)
  );
  NAND _262_ (
    .A(clk_2f_s),
    .B(_046_),
    .Y(_103_)
  );
  NAND _263_ (
    .A(reset_s),
    .B(_103_),
    .Y(_104_)
  );
  NOR _264_ (
    .A(_102_),
    .B(_104_),
    .Y(_000_[6])
  );
  NOR _265_ (
    .A(clk_2f_s),
    .B(paq_00[8]),
    .Y(_105_)
  );
  NAND _266_ (
    .A(clk_2f_s),
    .B(_047_),
    .Y(_106_)
  );
  NAND _267_ (
    .A(reset_s),
    .B(_106_),
    .Y(_107_)
  );
  NOR _268_ (
    .A(_105_),
    .B(_107_),
    .Y(_000_[7])
  );
  NOR _269_ (
    .A(clk_2f_s),
    .B(paq_11[0]),
    .Y(_108_)
  );
  NAND _270_ (
    .A(clk_2f_s),
    .B(_059_),
    .Y(_109_)
  );
  NAND _271_ (
    .A(reset_s),
    .B(_109_),
    .Y(_110_)
  );
  NOR _272_ (
    .A(_108_),
    .B(_110_),
    .Y(_005_)
  );
  NOR _273_ (
    .A(valid_rx000_synt),
    .B(clk_2f),
    .Y(_111_)
  );
  NAND _274_ (
    .A(_050_),
    .B(clk_2f),
    .Y(_112_)
  );
  NAND _275_ (
    .A(reset_s),
    .B(_112_),
    .Y(_113_)
  );
  NOR _276_ (
    .A(_111_),
    .B(_113_),
    .Y(_003_[0])
  );
  NOR _277_ (
    .A(clk_2f),
    .B(data_rx000_synt[0]),
    .Y(_114_)
  );
  NAND _278_ (
    .A(_024_),
    .B(clk_2f),
    .Y(_115_)
  );
  NAND _279_ (
    .A(reset_s),
    .B(_115_),
    .Y(_116_)
  );
  NOR _280_ (
    .A(_114_),
    .B(_116_),
    .Y(_003_[1])
  );
  NOR _281_ (
    .A(clk_2f),
    .B(data_rx000_synt[1]),
    .Y(_117_)
  );
  NAND _282_ (
    .A(_026_),
    .B(clk_2f),
    .Y(_118_)
  );
  NAND _283_ (
    .A(reset_s),
    .B(_118_),
    .Y(_119_)
  );
  NOR _284_ (
    .A(_117_),
    .B(_119_),
    .Y(_003_[2])
  );
  NOR _285_ (
    .A(clk_2f),
    .B(data_rx000_synt[2]),
    .Y(_120_)
  );
  NAND _286_ (
    .A(_028_),
    .B(clk_2f),
    .Y(_121_)
  );
  NAND _287_ (
    .A(reset_s),
    .B(_121_),
    .Y(_122_)
  );
  NOR _288_ (
    .A(_120_),
    .B(_122_),
    .Y(_003_[3])
  );
  NOR _289_ (
    .A(clk_2f),
    .B(data_rx000_synt[3]),
    .Y(_123_)
  );
  NAND _290_ (
    .A(_030_),
    .B(clk_2f),
    .Y(_124_)
  );
  NAND _291_ (
    .A(reset_s),
    .B(_124_),
    .Y(_125_)
  );
  NOR _292_ (
    .A(_123_),
    .B(_125_),
    .Y(_003_[4])
  );
  NOR _293_ (
    .A(clk_2f),
    .B(data_rx000_synt[4]),
    .Y(_126_)
  );
  NAND _294_ (
    .A(_032_),
    .B(clk_2f),
    .Y(_127_)
  );
  NAND _295_ (
    .A(reset_s),
    .B(_127_),
    .Y(_128_)
  );
  NOR _296_ (
    .A(_126_),
    .B(_128_),
    .Y(_003_[5])
  );
  NOR _297_ (
    .A(clk_2f),
    .B(data_rx000_synt[5]),
    .Y(_129_)
  );
  NAND _298_ (
    .A(_034_),
    .B(clk_2f),
    .Y(_130_)
  );
  NAND _299_ (
    .A(reset_s),
    .B(_130_),
    .Y(_131_)
  );
  NOR _300_ (
    .A(_129_),
    .B(_131_),
    .Y(_003_[6])
  );
  NOR _301_ (
    .A(clk_2f),
    .B(data_rx000_synt[6]),
    .Y(_132_)
  );
  NAND _302_ (
    .A(_036_),
    .B(clk_2f),
    .Y(_133_)
  );
  NAND _303_ (
    .A(reset_s),
    .B(_133_),
    .Y(_134_)
  );
  NOR _304_ (
    .A(_132_),
    .B(_134_),
    .Y(_003_[7])
  );
  NOR _305_ (
    .A(clk_2f),
    .B(data_rx000_synt[7]),
    .Y(_135_)
  );
  NAND _306_ (
    .A(_038_),
    .B(clk_2f),
    .Y(_136_)
  );
  NAND _307_ (
    .A(reset_s),
    .B(_136_),
    .Y(_137_)
  );
  NOR _308_ (
    .A(_135_),
    .B(_137_),
    .Y(_003_[8])
  );
  NOR _309_ (
    .A(paq_00[0]),
    .B(clk_2f),
    .Y(_138_)
  );
  NAND _310_ (
    .A(_049_),
    .B(clk_2f),
    .Y(_139_)
  );
  NAND _311_ (
    .A(reset_s),
    .B(_139_),
    .Y(_140_)
  );
  NOR _312_ (
    .A(_138_),
    .B(_140_),
    .Y(_002_[0])
  );
  NOR _313_ (
    .A(paq_00[1]),
    .B(clk_2f),
    .Y(_141_)
  );
  NAND _314_ (
    .A(clk_2f),
    .B(_051_),
    .Y(_142_)
  );
  NAND _315_ (
    .A(reset_s),
    .B(_142_),
    .Y(_143_)
  );
  NOR _316_ (
    .A(_141_),
    .B(_143_),
    .Y(_002_[1])
  );
  NOR _317_ (
    .A(paq_00[2]),
    .B(clk_2f),
    .Y(_144_)
  );
  NAND _318_ (
    .A(clk_2f),
    .B(_052_),
    .Y(_145_)
  );
  NAND _319_ (
    .A(reset_s),
    .B(_145_),
    .Y(_146_)
  );
  NOR _320_ (
    .A(_144_),
    .B(_146_),
    .Y(_002_[2])
  );
  NOR _321_ (
    .A(paq_00[3]),
    .B(clk_2f),
    .Y(_147_)
  );
  NAND _322_ (
    .A(clk_2f),
    .B(_053_),
    .Y(_148_)
  );
  NAND _323_ (
    .A(reset_s),
    .B(_148_),
    .Y(_149_)
  );
  NOR _324_ (
    .A(_147_),
    .B(_149_),
    .Y(_002_[3])
  );
  NOR _325_ (
    .A(paq_00[4]),
    .B(clk_2f),
    .Y(_150_)
  );
  NAND _326_ (
    .A(clk_2f),
    .B(_054_),
    .Y(_151_)
  );
  NAND _327_ (
    .A(reset_s),
    .B(_151_),
    .Y(_152_)
  );
  NOR _328_ (
    .A(_150_),
    .B(_152_),
    .Y(_002_[4])
  );
  NOR _329_ (
    .A(paq_00[5]),
    .B(clk_2f),
    .Y(_153_)
  );
  NAND _330_ (
    .A(clk_2f),
    .B(_055_),
    .Y(_154_)
  );
  NAND _331_ (
    .A(reset_s),
    .B(_154_),
    .Y(_155_)
  );
  NOR _332_ (
    .A(_153_),
    .B(_155_),
    .Y(_002_[5])
  );
  NOR _333_ (
    .A(paq_00[6]),
    .B(clk_2f),
    .Y(_156_)
  );
  NAND _334_ (
    .A(clk_2f),
    .B(_056_),
    .Y(_157_)
  );
  NAND _335_ (
    .A(reset_s),
    .B(_157_),
    .Y(_158_)
  );
  NOR _336_ (
    .A(_156_),
    .B(_158_),
    .Y(_002_[6])
  );
  NOR _337_ (
    .A(paq_00[7]),
    .B(clk_2f),
    .Y(_159_)
  );
  NAND _338_ (
    .A(clk_2f),
    .B(_057_),
    .Y(_160_)
  );
  NAND _339_ (
    .A(reset_s),
    .B(_160_),
    .Y(_161_)
  );
  NOR _340_ (
    .A(_159_),
    .B(_161_),
    .Y(_002_[7])
  );
  NOR _341_ (
    .A(paq_00[8]),
    .B(clk_2f),
    .Y(_162_)
  );
  NAND _342_ (
    .A(clk_2f),
    .B(_058_),
    .Y(_163_)
  );
  NAND _343_ (
    .A(reset_s),
    .B(_163_),
    .Y(_164_)
  );
  NOR _344_ (
    .A(_162_),
    .B(_164_),
    .Y(_002_[8])
  );
  NOR _345_ (
    .A(paq_11[1]),
    .B(clk_2f_s),
    .Y(_165_)
  );
  NAND _346_ (
    .A(_025_),
    .B(clk_2f_s),
    .Y(_166_)
  );
  NAND _347_ (
    .A(reset_s),
    .B(_166_),
    .Y(_167_)
  );
  NOR _348_ (
    .A(_165_),
    .B(_167_),
    .Y(_001_[0])
  );
  NOT _349_ (
    .A(clk_4f),
    .Y(_007_)
  );
  NOT _350_ (
    .A(clk_4f),
    .Y(_008_)
  );
  NOT _351_ (
    .A(clk_4f),
    .Y(_009_)
  );
  NOT _352_ (
    .A(clk_4f),
    .Y(_010_)
  );
  NOT _353_ (
    .A(clk_4f),
    .Y(_011_)
  );
  NOT _354_ (
    .A(clk_4f),
    .Y(_012_)
  );
  NOT _355_ (
    .A(clk_4f),
    .Y(_013_)
  );
  NOT _356_ (
    .A(clk_4f),
    .Y(_014_)
  );
  NOT _357_ (
    .A(clk_4f),
    .Y(_015_)
  );
  NOT _358_ (
    .A(clk_4f),
    .Y(_016_)
  );
  NOT _359_ (
    .A(clk_4f),
    .Y(_017_)
  );
  NOT _360_ (
    .A(clk_4f),
    .Y(_018_)
  );
  NOT _361_ (
    .A(clk_4f),
    .Y(_019_)
  );
  NOT _362_ (
    .A(clk_4f),
    .Y(_020_)
  );
  NOT _363_ (
    .A(clk_4f),
    .Y(_021_)
  );
  NOT _364_ (
    .A(clk_4f),
    .Y(_022_)
  );
  NOT _365_ (
    .A(clk_4f),
    .Y(_023_)
  );
  (* src = "synth_demux1x2_8bits.v:43" *)
  DFF _366_ (
    .C(clk_4f),
    .D(_000_[0]),
    .Q(data_rx00_synt[0])
  );
  (* src = "synth_demux1x2_8bits.v:43" *)
  DFF _367_ (
    .C(clk_4f),
    .D(_000_[1]),
    .Q(data_rx00_synt[1])
  );
  (* src = "synth_demux1x2_8bits.v:43" *)
  DFF _368_ (
    .C(clk_4f),
    .D(_000_[2]),
    .Q(data_rx00_synt[2])
  );
  (* src = "synth_demux1x2_8bits.v:43" *)
  DFF _369_ (
    .C(clk_4f),
    .D(_000_[3]),
    .Q(data_rx00_synt[3])
  );
  (* src = "synth_demux1x2_8bits.v:43" *)
  DFF _370_ (
    .C(clk_4f),
    .D(_000_[4]),
    .Q(data_rx00_synt[4])
  );
  (* src = "synth_demux1x2_8bits.v:43" *)
  DFF _371_ (
    .C(clk_4f),
    .D(_000_[5]),
    .Q(data_rx00_synt[5])
  );
  (* src = "synth_demux1x2_8bits.v:43" *)
  DFF _372_ (
    .C(clk_4f),
    .D(_000_[6]),
    .Q(data_rx00_synt[6])
  );
  (* src = "synth_demux1x2_8bits.v:43" *)
  DFF _373_ (
    .C(clk_4f),
    .D(_000_[7]),
    .Q(data_rx00_synt[7])
  );
  (* src = "synth_demux1x2_8bits.v:43" *)
  DFF _374_ (
    .C(clk_4f),
    .D(_001_[0]),
    .Q(data_rx11_synt[0])
  );
  (* src = "synth_demux1x2_8bits.v:43" *)
  DFF _375_ (
    .C(clk_4f),
    .D(_001_[1]),
    .Q(data_rx11_synt[1])
  );
  (* src = "synth_demux1x2_8bits.v:43" *)
  DFF _376_ (
    .C(clk_4f),
    .D(_001_[2]),
    .Q(data_rx11_synt[2])
  );
  (* src = "synth_demux1x2_8bits.v:43" *)
  DFF _377_ (
    .C(clk_4f),
    .D(_001_[3]),
    .Q(data_rx11_synt[3])
  );
  (* src = "synth_demux1x2_8bits.v:43" *)
  DFF _378_ (
    .C(clk_4f),
    .D(_001_[4]),
    .Q(data_rx11_synt[4])
  );
  (* src = "synth_demux1x2_8bits.v:43" *)
  DFF _379_ (
    .C(clk_4f),
    .D(_001_[5]),
    .Q(data_rx11_synt[5])
  );
  (* src = "synth_demux1x2_8bits.v:43" *)
  DFF _380_ (
    .C(clk_4f),
    .D(_001_[6]),
    .Q(data_rx11_synt[6])
  );
  (* src = "synth_demux1x2_8bits.v:43" *)
  DFF _381_ (
    .C(clk_4f),
    .D(_001_[7]),
    .Q(data_rx11_synt[7])
  );
  (* src = "synth_demux1x2_8bits.v:43" *)
  DFF _382_ (
    .C(clk_4f),
    .D(_004_),
    .Q(valid_rx00_synt)
  );
  (* src = "synth_demux1x2_8bits.v:43" *)
  DFF _383_ (
    .C(clk_4f),
    .D(_005_),
    .Q(valid_rx11_synt)
  );
  (* src = "synth_demux1x2_8bits.v:27" *)
  DFF _384_ (
    .C(_006_),
    .D(_002_[0]),
    .Q(paq_00[0])
  );
  (* src = "synth_demux1x2_8bits.v:27" *)
  DFF _385_ (
    .C(_007_),
    .D(_002_[1]),
    .Q(paq_00[1])
  );
  (* src = "synth_demux1x2_8bits.v:27" *)
  DFF _386_ (
    .C(_008_),
    .D(_002_[2]),
    .Q(paq_00[2])
  );
  (* src = "synth_demux1x2_8bits.v:27" *)
  DFF _387_ (
    .C(_009_),
    .D(_002_[3]),
    .Q(paq_00[3])
  );
  (* src = "synth_demux1x2_8bits.v:27" *)
  DFF _388_ (
    .C(_010_),
    .D(_002_[4]),
    .Q(paq_00[4])
  );
  (* src = "synth_demux1x2_8bits.v:27" *)
  DFF _389_ (
    .C(_011_),
    .D(_002_[5]),
    .Q(paq_00[5])
  );
  (* src = "synth_demux1x2_8bits.v:27" *)
  DFF _390_ (
    .C(_012_),
    .D(_002_[6]),
    .Q(paq_00[6])
  );
  (* src = "synth_demux1x2_8bits.v:27" *)
  DFF _391_ (
    .C(_013_),
    .D(_002_[7]),
    .Q(paq_00[7])
  );
  (* src = "synth_demux1x2_8bits.v:27" *)
  DFF _392_ (
    .C(_014_),
    .D(_002_[8]),
    .Q(paq_00[8])
  );
  (* src = "synth_demux1x2_8bits.v:27" *)
  DFF _393_ (
    .C(_015_),
    .D(_003_[0]),
    .Q(paq_11[0])
  );
  (* src = "synth_demux1x2_8bits.v:27" *)
  DFF _394_ (
    .C(_016_),
    .D(_003_[1]),
    .Q(paq_11[1])
  );
  (* src = "synth_demux1x2_8bits.v:27" *)
  DFF _395_ (
    .C(_017_),
    .D(_003_[2]),
    .Q(paq_11[2])
  );
  (* src = "synth_demux1x2_8bits.v:27" *)
  DFF _396_ (
    .C(_018_),
    .D(_003_[3]),
    .Q(paq_11[3])
  );
  (* src = "synth_demux1x2_8bits.v:27" *)
  DFF _397_ (
    .C(_019_),
    .D(_003_[4]),
    .Q(paq_11[4])
  );
  (* src = "synth_demux1x2_8bits.v:27" *)
  DFF _398_ (
    .C(_020_),
    .D(_003_[5]),
    .Q(paq_11[5])
  );
  (* src = "synth_demux1x2_8bits.v:27" *)
  DFF _399_ (
    .C(_021_),
    .D(_003_[6]),
    .Q(paq_11[6])
  );
  (* src = "synth_demux1x2_8bits.v:27" *)
  DFF _400_ (
    .C(_022_),
    .D(_003_[7]),
    .Q(paq_11[7])
  );
  (* src = "synth_demux1x2_8bits.v:27" *)
  DFF _401_ (
    .C(_023_),
    .D(_003_[8]),
    .Q(paq_11[8])
  );
  (* src = "synth_demux1x2_8bits.v:22" *)
  DFF _402_ (
    .C(clk_4f),
    .D(reset),
    .Q(reset_s)
  );
  (* src = "synth_demux1x2_8bits.v:22" *)
  DFF _403_ (
    .C(clk_4f),
    .D(clk_2f),
    .Q(clk_2f_s)
  );
endmodule

(* src = "synth_demux2x4_8bits.v:10" *)
module synth_demux2x4_8bits(data_rx0_synt, data_rx1_synt, data_rx2_synt, data_rx3_synt, valid_rx0_synt, valid_rx1_synt, valid_rx2_synt, valid_rx3_synt, data_rx00s_synt, data_rx11s_synt, valid_rx00s_synt, valid_rx11s_synt, clk_f, clk_2f, reset);
  (* src = "synth_demux2x4_8bits.v:41" *)
  wire [7:0] _000_;
  (* src = "synth_demux2x4_8bits.v:41" *)
  wire [7:0] _001_;
  (* src = "synth_demux2x4_8bits.v:41" *)
  wire [7:0] _002_;
  (* src = "synth_demux2x4_8bits.v:41" *)
  wire [7:0] _003_;
  (* src = "synth_demux2x4_8bits.v:30" *)
  wire [8:0] _004_;
  (* src = "synth_demux2x4_8bits.v:30" *)
  wire [8:0] _005_;
  (* src = "synth_demux2x4_8bits.v:30" *)
  wire [8:0] _006_;
  (* src = "synth_demux2x4_8bits.v:30" *)
  wire [8:0] _007_;
  (* src = "synth_demux2x4_8bits.v:41" *)
  wire _008_;
  (* src = "synth_demux2x4_8bits.v:41" *)
  wire _009_;
  (* src = "synth_demux2x4_8bits.v:41" *)
  wire _010_;
  (* src = "synth_demux2x4_8bits.v:41" *)
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  wire _216_;
  wire _217_;
  wire _218_;
  wire _219_;
  wire _220_;
  wire _221_;
  wire _222_;
  wire _223_;
  wire _224_;
  wire _225_;
  wire _226_;
  wire _227_;
  wire _228_;
  wire _229_;
  wire _230_;
  wire _231_;
  wire _232_;
  wire _233_;
  wire _234_;
  wire _235_;
  wire _236_;
  wire _237_;
  wire _238_;
  wire _239_;
  wire _240_;
  wire _241_;
  wire _242_;
  wire _243_;
  wire _244_;
  wire _245_;
  wire _246_;
  wire _247_;
  wire _248_;
  wire _249_;
  wire _250_;
  wire _251_;
  wire _252_;
  wire _253_;
  wire _254_;
  wire _255_;
  wire _256_;
  wire _257_;
  wire _258_;
  wire _259_;
  wire _260_;
  wire _261_;
  wire _262_;
  wire _263_;
  wire _264_;
  wire _265_;
  wire _266_;
  wire _267_;
  wire _268_;
  wire _269_;
  wire _270_;
  wire _271_;
  wire _272_;
  wire _273_;
  wire _274_;
  wire _275_;
  wire _276_;
  wire _277_;
  wire _278_;
  wire _279_;
  wire _280_;
  wire _281_;
  wire _282_;
  wire _283_;
  (* src = "synth_demux2x4_8bits.v:16" *)
  input clk_2f;
  (* src = "synth_demux2x4_8bits.v:16" *)
  input clk_f;
  (* src = "synth_demux2x4_8bits.v:21" *)
  wire clk_f_s;
  (* src = "synth_demux2x4_8bits.v:10" *)
  output [7:0] data_rx0_synt;
  (* src = "synth_demux2x4_8bits.v:14" *)
  input [7:0] data_rx00s_synt;
  (* src = "synth_demux2x4_8bits.v:10" *)
  output [7:0] data_rx1_synt;
  (* src = "synth_demux2x4_8bits.v:14" *)
  input [7:0] data_rx11s_synt;
  (* src = "synth_demux2x4_8bits.v:11" *)
  output [7:0] data_rx2_synt;
  (* src = "synth_demux2x4_8bits.v:11" *)
  output [7:0] data_rx3_synt;
  (* src = "synth_demux2x4_8bits.v:20" *)
  wire [8:0] paq_0;
  (* src = "synth_demux2x4_8bits.v:20" *)
  wire [8:0] paq_1;
  (* src = "synth_demux2x4_8bits.v:20" *)
  wire [8:0] paq_2;
  (* src = "synth_demux2x4_8bits.v:20" *)
  wire [8:0] paq_3;
  (* src = "synth_demux2x4_8bits.v:16" *)
  input reset;
  (* src = "synth_demux2x4_8bits.v:19" *)
  wire reset_s;
  (* src = "synth_demux2x4_8bits.v:12" *)
  output valid_rx0_synt;
  (* src = "synth_demux2x4_8bits.v:15" *)
  input valid_rx00s_synt;
  (* src = "synth_demux2x4_8bits.v:12" *)
  output valid_rx1_synt;
  (* src = "synth_demux2x4_8bits.v:15" *)
  input valid_rx11s_synt;
  (* src = "synth_demux2x4_8bits.v:13" *)
  output valid_rx2_synt;
  (* src = "synth_demux2x4_8bits.v:13" *)
  output valid_rx3_synt;
  NOT _284_ (
    .A(data_rx3_synt[1]),
    .Y(_048_)
  );
  NOT _285_ (
    .A(clk_f_s),
    .Y(_049_)
  );
  NOT _286_ (
    .A(data_rx3_synt[2]),
    .Y(_050_)
  );
  NOT _287_ (
    .A(data_rx3_synt[3]),
    .Y(_051_)
  );
  NOT _288_ (
    .A(data_rx3_synt[4]),
    .Y(_052_)
  );
  NOT _289_ (
    .A(data_rx3_synt[5]),
    .Y(_053_)
  );
  NOT _290_ (
    .A(data_rx3_synt[6]),
    .Y(_054_)
  );
  NOT _291_ (
    .A(data_rx3_synt[7]),
    .Y(_055_)
  );
  NOT _292_ (
    .A(reset_s),
    .Y(_056_)
  );
  NOT _293_ (
    .A(paq_2[0]),
    .Y(_057_)
  );
  NOT _294_ (
    .A(paq_0[0]),
    .Y(_058_)
  );
  NOT _295_ (
    .A(valid_rx1_synt),
    .Y(_059_)
  );
  NOT _296_ (
    .A(paq_0[1]),
    .Y(_060_)
  );
  NOT _297_ (
    .A(paq_0[2]),
    .Y(_061_)
  );
  NOT _298_ (
    .A(paq_0[3]),
    .Y(_062_)
  );
  NOT _299_ (
    .A(paq_0[4]),
    .Y(_063_)
  );
  NOT _300_ (
    .A(paq_0[5]),
    .Y(_064_)
  );
  NOT _301_ (
    .A(paq_0[6]),
    .Y(_065_)
  );
  NOT _302_ (
    .A(paq_0[7]),
    .Y(_066_)
  );
  NOT _303_ (
    .A(paq_0[8]),
    .Y(_067_)
  );
  NOT _304_ (
    .A(data_rx1_synt[0]),
    .Y(_068_)
  );
  NOT _305_ (
    .A(data_rx1_synt[1]),
    .Y(_069_)
  );
  NOT _306_ (
    .A(data_rx1_synt[2]),
    .Y(_070_)
  );
  NOT _307_ (
    .A(data_rx1_synt[3]),
    .Y(_071_)
  );
  NOT _308_ (
    .A(data_rx1_synt[4]),
    .Y(_072_)
  );
  NOT _309_ (
    .A(data_rx1_synt[5]),
    .Y(_073_)
  );
  NOT _310_ (
    .A(data_rx1_synt[6]),
    .Y(_074_)
  );
  NOT _311_ (
    .A(data_rx1_synt[7]),
    .Y(_075_)
  );
  NOT _312_ (
    .A(paq_2[1]),
    .Y(_076_)
  );
  NOT _313_ (
    .A(paq_2[2]),
    .Y(_077_)
  );
  NOT _314_ (
    .A(paq_2[3]),
    .Y(_078_)
  );
  NOT _315_ (
    .A(paq_2[4]),
    .Y(_079_)
  );
  NOT _316_ (
    .A(paq_2[5]),
    .Y(_080_)
  );
  NOT _317_ (
    .A(paq_2[6]),
    .Y(_081_)
  );
  NOT _318_ (
    .A(paq_2[7]),
    .Y(_082_)
  );
  NOT _319_ (
    .A(paq_2[8]),
    .Y(_083_)
  );
  NOT _320_ (
    .A(valid_rx3_synt),
    .Y(_084_)
  );
  NOT _321_ (
    .A(data_rx3_synt[0]),
    .Y(_085_)
  );
  NOT _322_ (
    .A(clk_2f),
    .Y(_012_)
  );
  NOR _323_ (
    .A(clk_f_s),
    .B(paq_3[1]),
    .Y(_086_)
  );
  NAND _324_ (
    .A(clk_f_s),
    .B(_085_),
    .Y(_087_)
  );
  NAND _325_ (
    .A(reset_s),
    .B(_087_),
    .Y(_088_)
  );
  NOR _326_ (
    .A(_086_),
    .B(_088_),
    .Y(_003_[0])
  );
  NOR _327_ (
    .A(paq_3[2]),
    .B(clk_f_s),
    .Y(_089_)
  );
  NAND _328_ (
    .A(_048_),
    .B(clk_f_s),
    .Y(_090_)
  );
  NAND _329_ (
    .A(reset_s),
    .B(_090_),
    .Y(_091_)
  );
  NOR _330_ (
    .A(_089_),
    .B(_091_),
    .Y(_003_[1])
  );
  NOR _331_ (
    .A(clk_f_s),
    .B(paq_3[3]),
    .Y(_092_)
  );
  NAND _332_ (
    .A(clk_f_s),
    .B(_050_),
    .Y(_093_)
  );
  NAND _333_ (
    .A(reset_s),
    .B(_093_),
    .Y(_094_)
  );
  NOR _334_ (
    .A(_092_),
    .B(_094_),
    .Y(_003_[2])
  );
  NOR _335_ (
    .A(clk_f_s),
    .B(paq_3[4]),
    .Y(_095_)
  );
  NAND _336_ (
    .A(clk_f_s),
    .B(_051_),
    .Y(_096_)
  );
  NAND _337_ (
    .A(reset_s),
    .B(_096_),
    .Y(_097_)
  );
  NOR _338_ (
    .A(_095_),
    .B(_097_),
    .Y(_003_[3])
  );
  NOR _339_ (
    .A(clk_f_s),
    .B(paq_3[5]),
    .Y(_098_)
  );
  NAND _340_ (
    .A(clk_f_s),
    .B(_052_),
    .Y(_099_)
  );
  NAND _341_ (
    .A(reset_s),
    .B(_099_),
    .Y(_100_)
  );
  NOR _342_ (
    .A(_098_),
    .B(_100_),
    .Y(_003_[4])
  );
  NOR _343_ (
    .A(clk_f_s),
    .B(paq_3[6]),
    .Y(_101_)
  );
  NAND _344_ (
    .A(clk_f_s),
    .B(_053_),
    .Y(_102_)
  );
  NAND _345_ (
    .A(reset_s),
    .B(_102_),
    .Y(_103_)
  );
  NOR _346_ (
    .A(_101_),
    .B(_103_),
    .Y(_003_[5])
  );
  NOR _347_ (
    .A(clk_f_s),
    .B(paq_3[7]),
    .Y(_104_)
  );
  NAND _348_ (
    .A(clk_f_s),
    .B(_054_),
    .Y(_105_)
  );
  NAND _349_ (
    .A(reset_s),
    .B(_105_),
    .Y(_106_)
  );
  NOR _350_ (
    .A(_104_),
    .B(_106_),
    .Y(_003_[6])
  );
  NOR _351_ (
    .A(clk_f_s),
    .B(paq_3[8]),
    .Y(_107_)
  );
  NAND _352_ (
    .A(clk_f_s),
    .B(_055_),
    .Y(_108_)
  );
  NAND _353_ (
    .A(reset_s),
    .B(_108_),
    .Y(_109_)
  );
  NOR _354_ (
    .A(_107_),
    .B(_109_),
    .Y(_003_[7])
  );
  NOR _355_ (
    .A(clk_f_s),
    .B(_057_),
    .Y(_110_)
  );
  NAND _356_ (
    .A(_049_),
    .B(paq_2[0]),
    .Y(_111_)
  );
  NAND _357_ (
    .A(clk_f_s),
    .B(valid_rx2_synt),
    .Y(_112_)
  );
  NOT _358_ (
    .A(_112_),
    .Y(_113_)
  );
  NOR _359_ (
    .A(_110_),
    .B(_113_),
    .Y(_114_)
  );
  NOR _360_ (
    .A(_056_),
    .B(_114_),
    .Y(_010_)
  );
  NOR _361_ (
    .A(clk_f_s),
    .B(paq_1[0]),
    .Y(_115_)
  );
  NAND _362_ (
    .A(clk_f_s),
    .B(_059_),
    .Y(_116_)
  );
  NAND _363_ (
    .A(reset_s),
    .B(_116_),
    .Y(_117_)
  );
  NOR _364_ (
    .A(_115_),
    .B(_117_),
    .Y(_009_)
  );
  NOR _365_ (
    .A(clk_f_s),
    .B(_058_),
    .Y(_118_)
  );
  NAND _366_ (
    .A(_049_),
    .B(paq_0[0]),
    .Y(_119_)
  );
  NAND _367_ (
    .A(clk_f_s),
    .B(valid_rx0_synt),
    .Y(_120_)
  );
  NOT _368_ (
    .A(_120_),
    .Y(_121_)
  );
  NOR _369_ (
    .A(_118_),
    .B(_121_),
    .Y(_122_)
  );
  NOR _370_ (
    .A(_056_),
    .B(_122_),
    .Y(_008_)
  );
  NOR _371_ (
    .A(clk_f_s),
    .B(paq_1[1]),
    .Y(_123_)
  );
  NAND _372_ (
    .A(clk_f_s),
    .B(_068_),
    .Y(_124_)
  );
  NAND _373_ (
    .A(reset_s),
    .B(_124_),
    .Y(_125_)
  );
  NOR _374_ (
    .A(_123_),
    .B(_125_),
    .Y(_001_[0])
  );
  NOR _375_ (
    .A(clk_f_s),
    .B(paq_1[2]),
    .Y(_126_)
  );
  NAND _376_ (
    .A(clk_f_s),
    .B(_069_),
    .Y(_127_)
  );
  NAND _377_ (
    .A(reset_s),
    .B(_127_),
    .Y(_128_)
  );
  NOR _378_ (
    .A(_126_),
    .B(_128_),
    .Y(_001_[1])
  );
  NOR _379_ (
    .A(clk_f_s),
    .B(paq_1[3]),
    .Y(_129_)
  );
  NAND _380_ (
    .A(clk_f_s),
    .B(_070_),
    .Y(_130_)
  );
  NAND _381_ (
    .A(reset_s),
    .B(_130_),
    .Y(_131_)
  );
  NOR _382_ (
    .A(_129_),
    .B(_131_),
    .Y(_001_[2])
  );
  NOR _383_ (
    .A(clk_f_s),
    .B(paq_1[4]),
    .Y(_132_)
  );
  NAND _384_ (
    .A(clk_f_s),
    .B(_071_),
    .Y(_133_)
  );
  NAND _385_ (
    .A(reset_s),
    .B(_133_),
    .Y(_134_)
  );
  NOR _386_ (
    .A(_132_),
    .B(_134_),
    .Y(_001_[3])
  );
  NOR _387_ (
    .A(clk_f_s),
    .B(paq_1[5]),
    .Y(_135_)
  );
  NAND _388_ (
    .A(clk_f_s),
    .B(_072_),
    .Y(_136_)
  );
  NAND _389_ (
    .A(reset_s),
    .B(_136_),
    .Y(_137_)
  );
  NOR _390_ (
    .A(_135_),
    .B(_137_),
    .Y(_001_[4])
  );
  NOR _391_ (
    .A(clk_f_s),
    .B(paq_1[6]),
    .Y(_138_)
  );
  NAND _392_ (
    .A(clk_f_s),
    .B(_073_),
    .Y(_139_)
  );
  NAND _393_ (
    .A(reset_s),
    .B(_139_),
    .Y(_140_)
  );
  NOR _394_ (
    .A(_138_),
    .B(_140_),
    .Y(_001_[5])
  );
  NOR _395_ (
    .A(clk_f_s),
    .B(paq_1[7]),
    .Y(_141_)
  );
  NAND _396_ (
    .A(clk_f_s),
    .B(_074_),
    .Y(_142_)
  );
  NAND _397_ (
    .A(reset_s),
    .B(_142_),
    .Y(_143_)
  );
  NOR _398_ (
    .A(_141_),
    .B(_143_),
    .Y(_001_[6])
  );
  NOR _399_ (
    .A(clk_f_s),
    .B(paq_1[8]),
    .Y(_144_)
  );
  NAND _400_ (
    .A(clk_f_s),
    .B(_075_),
    .Y(_145_)
  );
  NAND _401_ (
    .A(reset_s),
    .B(_145_),
    .Y(_146_)
  );
  NOR _402_ (
    .A(_144_),
    .B(_146_),
    .Y(_001_[7])
  );
  NOR _403_ (
    .A(clk_f_s),
    .B(_060_),
    .Y(_147_)
  );
  NAND _404_ (
    .A(_049_),
    .B(paq_0[1]),
    .Y(_148_)
  );
  NAND _405_ (
    .A(clk_f_s),
    .B(data_rx0_synt[0]),
    .Y(_149_)
  );
  NOT _406_ (
    .A(_149_),
    .Y(_150_)
  );
  NOR _407_ (
    .A(_147_),
    .B(_150_),
    .Y(_151_)
  );
  NOR _408_ (
    .A(_056_),
    .B(_151_),
    .Y(_000_[0])
  );
  NOR _409_ (
    .A(clk_f_s),
    .B(_061_),
    .Y(_152_)
  );
  NAND _410_ (
    .A(_049_),
    .B(paq_0[2]),
    .Y(_153_)
  );
  NAND _411_ (
    .A(clk_f_s),
    .B(data_rx0_synt[1]),
    .Y(_154_)
  );
  NOT _412_ (
    .A(_154_),
    .Y(_155_)
  );
  NOR _413_ (
    .A(_152_),
    .B(_155_),
    .Y(_156_)
  );
  NOR _414_ (
    .A(_056_),
    .B(_156_),
    .Y(_000_[1])
  );
  NOR _415_ (
    .A(clk_f_s),
    .B(_062_),
    .Y(_157_)
  );
  NAND _416_ (
    .A(_049_),
    .B(paq_0[3]),
    .Y(_158_)
  );
  NAND _417_ (
    .A(clk_f_s),
    .B(data_rx0_synt[2]),
    .Y(_159_)
  );
  NOT _418_ (
    .A(_159_),
    .Y(_160_)
  );
  NOR _419_ (
    .A(_157_),
    .B(_160_),
    .Y(_161_)
  );
  NOR _420_ (
    .A(_056_),
    .B(_161_),
    .Y(_000_[2])
  );
  NOR _421_ (
    .A(clk_f_s),
    .B(_063_),
    .Y(_162_)
  );
  NAND _422_ (
    .A(_049_),
    .B(paq_0[4]),
    .Y(_163_)
  );
  NAND _423_ (
    .A(clk_f_s),
    .B(data_rx0_synt[3]),
    .Y(_164_)
  );
  NOT _424_ (
    .A(_164_),
    .Y(_165_)
  );
  NOR _425_ (
    .A(_162_),
    .B(_165_),
    .Y(_166_)
  );
  NOR _426_ (
    .A(_056_),
    .B(_166_),
    .Y(_000_[3])
  );
  NOR _427_ (
    .A(clk_f_s),
    .B(_064_),
    .Y(_167_)
  );
  NAND _428_ (
    .A(_049_),
    .B(paq_0[5]),
    .Y(_168_)
  );
  NAND _429_ (
    .A(clk_f_s),
    .B(data_rx0_synt[4]),
    .Y(_169_)
  );
  NOT _430_ (
    .A(_169_),
    .Y(_170_)
  );
  NOR _431_ (
    .A(_167_),
    .B(_170_),
    .Y(_171_)
  );
  NOR _432_ (
    .A(_056_),
    .B(_171_),
    .Y(_000_[4])
  );
  NOR _433_ (
    .A(clk_f_s),
    .B(_065_),
    .Y(_172_)
  );
  NAND _434_ (
    .A(_049_),
    .B(paq_0[6]),
    .Y(_173_)
  );
  NAND _435_ (
    .A(clk_f_s),
    .B(data_rx0_synt[5]),
    .Y(_174_)
  );
  NOT _436_ (
    .A(_174_),
    .Y(_175_)
  );
  NOR _437_ (
    .A(_172_),
    .B(_175_),
    .Y(_176_)
  );
  NOR _438_ (
    .A(_056_),
    .B(_176_),
    .Y(_000_[5])
  );
  NOR _439_ (
    .A(clk_f_s),
    .B(_066_),
    .Y(_177_)
  );
  NAND _440_ (
    .A(_049_),
    .B(paq_0[7]),
    .Y(_178_)
  );
  NAND _441_ (
    .A(clk_f_s),
    .B(data_rx0_synt[6]),
    .Y(_179_)
  );
  NOT _442_ (
    .A(_179_),
    .Y(_180_)
  );
  NOR _443_ (
    .A(_177_),
    .B(_180_),
    .Y(_181_)
  );
  NOR _444_ (
    .A(_056_),
    .B(_181_),
    .Y(_000_[6])
  );
  NOR _445_ (
    .A(clk_f_s),
    .B(_067_),
    .Y(_182_)
  );
  NAND _446_ (
    .A(_049_),
    .B(paq_0[8]),
    .Y(_183_)
  );
  NAND _447_ (
    .A(clk_f_s),
    .B(data_rx0_synt[7]),
    .Y(_184_)
  );
  NOT _448_ (
    .A(_184_),
    .Y(_185_)
  );
  NOR _449_ (
    .A(_182_),
    .B(_185_),
    .Y(_186_)
  );
  NOR _450_ (
    .A(_056_),
    .B(_186_),
    .Y(_000_[7])
  );
  NOR _451_ (
    .A(clk_f_s),
    .B(paq_3[0]),
    .Y(_187_)
  );
  NAND _452_ (
    .A(clk_f_s),
    .B(_084_),
    .Y(_188_)
  );
  NAND _453_ (
    .A(reset_s),
    .B(_188_),
    .Y(_189_)
  );
  NOR _454_ (
    .A(_187_),
    .B(_189_),
    .Y(_011_)
  );
  NOR _455_ (
    .A(clk_f_s),
    .B(_076_),
    .Y(_190_)
  );
  NAND _456_ (
    .A(_049_),
    .B(paq_2[1]),
    .Y(_191_)
  );
  NAND _457_ (
    .A(clk_f_s),
    .B(data_rx2_synt[0]),
    .Y(_192_)
  );
  NOT _458_ (
    .A(_192_),
    .Y(_193_)
  );
  NOR _459_ (
    .A(_190_),
    .B(_193_),
    .Y(_194_)
  );
  NOR _460_ (
    .A(_056_),
    .B(_194_),
    .Y(_002_[0])
  );
  NOR _461_ (
    .A(clk_f_s),
    .B(_077_),
    .Y(_195_)
  );
  NAND _462_ (
    .A(_049_),
    .B(paq_2[2]),
    .Y(_196_)
  );
  NAND _463_ (
    .A(clk_f_s),
    .B(data_rx2_synt[1]),
    .Y(_197_)
  );
  NOT _464_ (
    .A(_197_),
    .Y(_198_)
  );
  NOR _465_ (
    .A(_195_),
    .B(_198_),
    .Y(_199_)
  );
  NOR _466_ (
    .A(_056_),
    .B(_199_),
    .Y(_002_[1])
  );
  NOR _467_ (
    .A(clk_f_s),
    .B(_078_),
    .Y(_200_)
  );
  NAND _468_ (
    .A(_049_),
    .B(paq_2[3]),
    .Y(_201_)
  );
  NAND _469_ (
    .A(clk_f_s),
    .B(data_rx2_synt[2]),
    .Y(_202_)
  );
  NOT _470_ (
    .A(_202_),
    .Y(_203_)
  );
  NOR _471_ (
    .A(_200_),
    .B(_203_),
    .Y(_204_)
  );
  NOR _472_ (
    .A(_056_),
    .B(_204_),
    .Y(_002_[2])
  );
  NOR _473_ (
    .A(clk_f_s),
    .B(_079_),
    .Y(_205_)
  );
  NAND _474_ (
    .A(_049_),
    .B(paq_2[4]),
    .Y(_206_)
  );
  NAND _475_ (
    .A(clk_f_s),
    .B(data_rx2_synt[3]),
    .Y(_207_)
  );
  NOT _476_ (
    .A(_207_),
    .Y(_208_)
  );
  NOR _477_ (
    .A(_205_),
    .B(_208_),
    .Y(_209_)
  );
  NOR _478_ (
    .A(_056_),
    .B(_209_),
    .Y(_002_[3])
  );
  NOR _479_ (
    .A(clk_f_s),
    .B(_080_),
    .Y(_210_)
  );
  NAND _480_ (
    .A(_049_),
    .B(paq_2[5]),
    .Y(_211_)
  );
  NAND _481_ (
    .A(clk_f_s),
    .B(data_rx2_synt[4]),
    .Y(_212_)
  );
  NOT _482_ (
    .A(_212_),
    .Y(_213_)
  );
  NOR _483_ (
    .A(_210_),
    .B(_213_),
    .Y(_214_)
  );
  NOR _484_ (
    .A(_056_),
    .B(_214_),
    .Y(_002_[4])
  );
  NOR _485_ (
    .A(clk_f_s),
    .B(_081_),
    .Y(_215_)
  );
  NAND _486_ (
    .A(_049_),
    .B(paq_2[6]),
    .Y(_216_)
  );
  NAND _487_ (
    .A(clk_f_s),
    .B(data_rx2_synt[5]),
    .Y(_217_)
  );
  NOT _488_ (
    .A(_217_),
    .Y(_218_)
  );
  NOR _489_ (
    .A(_215_),
    .B(_218_),
    .Y(_219_)
  );
  NOR _490_ (
    .A(_056_),
    .B(_219_),
    .Y(_002_[5])
  );
  NOR _491_ (
    .A(clk_f_s),
    .B(_082_),
    .Y(_220_)
  );
  NAND _492_ (
    .A(_049_),
    .B(paq_2[7]),
    .Y(_221_)
  );
  NAND _493_ (
    .A(clk_f_s),
    .B(data_rx2_synt[6]),
    .Y(_222_)
  );
  NOT _494_ (
    .A(_222_),
    .Y(_223_)
  );
  NOR _495_ (
    .A(_220_),
    .B(_223_),
    .Y(_224_)
  );
  NOR _496_ (
    .A(_056_),
    .B(_224_),
    .Y(_002_[6])
  );
  NOR _497_ (
    .A(clk_f_s),
    .B(_083_),
    .Y(_225_)
  );
  NAND _498_ (
    .A(_049_),
    .B(paq_2[8]),
    .Y(_226_)
  );
  NAND _499_ (
    .A(clk_f_s),
    .B(data_rx2_synt[7]),
    .Y(_227_)
  );
  NOT _500_ (
    .A(_227_),
    .Y(_228_)
  );
  NOR _501_ (
    .A(_225_),
    .B(_228_),
    .Y(_229_)
  );
  NOR _502_ (
    .A(_056_),
    .B(_229_),
    .Y(_002_[7])
  );
  NAND _503_ (
    .A(clk_f_s),
    .B(paq_1[0]),
    .Y(_230_)
  );
  NAND _504_ (
    .A(_049_),
    .B(valid_rx00s_synt),
    .Y(_231_)
  );
  NAND _505_ (
    .A(_230_),
    .B(_231_),
    .Y(_005_[0])
  );
  NAND _506_ (
    .A(clk_f_s),
    .B(paq_1[1]),
    .Y(_232_)
  );
  NAND _507_ (
    .A(_049_),
    .B(data_rx00s_synt[0]),
    .Y(_233_)
  );
  NAND _508_ (
    .A(_232_),
    .B(_233_),
    .Y(_005_[1])
  );
  NAND _509_ (
    .A(clk_f_s),
    .B(paq_1[2]),
    .Y(_234_)
  );
  NAND _510_ (
    .A(_049_),
    .B(data_rx00s_synt[1]),
    .Y(_235_)
  );
  NAND _511_ (
    .A(_234_),
    .B(_235_),
    .Y(_005_[2])
  );
  NAND _512_ (
    .A(clk_f_s),
    .B(paq_1[3]),
    .Y(_236_)
  );
  NAND _513_ (
    .A(_049_),
    .B(data_rx00s_synt[2]),
    .Y(_237_)
  );
  NAND _514_ (
    .A(_236_),
    .B(_237_),
    .Y(_005_[3])
  );
  NAND _515_ (
    .A(clk_f_s),
    .B(paq_1[4]),
    .Y(_238_)
  );
  NAND _516_ (
    .A(_049_),
    .B(data_rx00s_synt[3]),
    .Y(_239_)
  );
  NAND _517_ (
    .A(_238_),
    .B(_239_),
    .Y(_005_[4])
  );
  NAND _518_ (
    .A(clk_f_s),
    .B(paq_1[5]),
    .Y(_240_)
  );
  NAND _519_ (
    .A(_049_),
    .B(data_rx00s_synt[4]),
    .Y(_241_)
  );
  NAND _520_ (
    .A(_240_),
    .B(_241_),
    .Y(_005_[5])
  );
  NAND _521_ (
    .A(clk_f_s),
    .B(paq_1[6]),
    .Y(_242_)
  );
  NAND _522_ (
    .A(_049_),
    .B(data_rx00s_synt[5]),
    .Y(_243_)
  );
  NAND _523_ (
    .A(_242_),
    .B(_243_),
    .Y(_005_[6])
  );
  NAND _524_ (
    .A(clk_f_s),
    .B(paq_1[7]),
    .Y(_244_)
  );
  NAND _525_ (
    .A(_049_),
    .B(data_rx00s_synt[6]),
    .Y(_245_)
  );
  NAND _526_ (
    .A(_244_),
    .B(_245_),
    .Y(_005_[7])
  );
  NAND _527_ (
    .A(clk_f_s),
    .B(paq_1[8]),
    .Y(_246_)
  );
  NAND _528_ (
    .A(_049_),
    .B(data_rx00s_synt[7]),
    .Y(_247_)
  );
  NAND _529_ (
    .A(_246_),
    .B(_247_),
    .Y(_005_[8])
  );
  NAND _530_ (
    .A(clk_f_s),
    .B(paq_3[0]),
    .Y(_248_)
  );
  NAND _531_ (
    .A(_049_),
    .B(valid_rx11s_synt),
    .Y(_249_)
  );
  NAND _532_ (
    .A(_248_),
    .B(_249_),
    .Y(_007_[0])
  );
  NAND _533_ (
    .A(clk_f_s),
    .B(paq_3[1]),
    .Y(_250_)
  );
  NAND _534_ (
    .A(_049_),
    .B(data_rx11s_synt[0]),
    .Y(_251_)
  );
  NAND _535_ (
    .A(_250_),
    .B(_251_),
    .Y(_007_[1])
  );
  NAND _536_ (
    .A(paq_3[2]),
    .B(clk_f_s),
    .Y(_252_)
  );
  NAND _537_ (
    .A(_049_),
    .B(data_rx11s_synt[1]),
    .Y(_253_)
  );
  NAND _538_ (
    .A(_252_),
    .B(_253_),
    .Y(_007_[2])
  );
  NAND _539_ (
    .A(clk_f_s),
    .B(paq_3[3]),
    .Y(_254_)
  );
  NAND _540_ (
    .A(_049_),
    .B(data_rx11s_synt[2]),
    .Y(_255_)
  );
  NAND _541_ (
    .A(_254_),
    .B(_255_),
    .Y(_007_[3])
  );
  NAND _542_ (
    .A(clk_f_s),
    .B(paq_3[4]),
    .Y(_256_)
  );
  NAND _543_ (
    .A(_049_),
    .B(data_rx11s_synt[3]),
    .Y(_257_)
  );
  NAND _544_ (
    .A(_256_),
    .B(_257_),
    .Y(_007_[4])
  );
  NAND _545_ (
    .A(clk_f_s),
    .B(paq_3[5]),
    .Y(_258_)
  );
  NAND _546_ (
    .A(_049_),
    .B(data_rx11s_synt[4]),
    .Y(_259_)
  );
  NAND _547_ (
    .A(_258_),
    .B(_259_),
    .Y(_007_[5])
  );
  NAND _548_ (
    .A(clk_f_s),
    .B(paq_3[6]),
    .Y(_260_)
  );
  NAND _549_ (
    .A(_049_),
    .B(data_rx11s_synt[5]),
    .Y(_261_)
  );
  NAND _550_ (
    .A(_260_),
    .B(_261_),
    .Y(_007_[6])
  );
  NAND _551_ (
    .A(clk_f_s),
    .B(paq_3[7]),
    .Y(_262_)
  );
  NAND _552_ (
    .A(_049_),
    .B(data_rx11s_synt[6]),
    .Y(_263_)
  );
  NAND _553_ (
    .A(_262_),
    .B(_263_),
    .Y(_007_[7])
  );
  NAND _554_ (
    .A(clk_f_s),
    .B(paq_3[8]),
    .Y(_264_)
  );
  NAND _555_ (
    .A(_049_),
    .B(data_rx11s_synt[7]),
    .Y(_265_)
  );
  NAND _556_ (
    .A(_264_),
    .B(_265_),
    .Y(_007_[8])
  );
  NAND _557_ (
    .A(clk_f_s),
    .B(valid_rx11s_synt),
    .Y(_266_)
  );
  NAND _558_ (
    .A(_111_),
    .B(_266_),
    .Y(_006_[0])
  );
  NAND _559_ (
    .A(clk_f_s),
    .B(data_rx11s_synt[0]),
    .Y(_267_)
  );
  NAND _560_ (
    .A(_191_),
    .B(_267_),
    .Y(_006_[1])
  );
  NAND _561_ (
    .A(clk_f_s),
    .B(data_rx11s_synt[1]),
    .Y(_268_)
  );
  NAND _562_ (
    .A(_196_),
    .B(_268_),
    .Y(_006_[2])
  );
  NAND _563_ (
    .A(clk_f_s),
    .B(data_rx11s_synt[2]),
    .Y(_269_)
  );
  NAND _564_ (
    .A(_201_),
    .B(_269_),
    .Y(_006_[3])
  );
  NAND _565_ (
    .A(clk_f_s),
    .B(data_rx11s_synt[3]),
    .Y(_270_)
  );
  NAND _566_ (
    .A(_206_),
    .B(_270_),
    .Y(_006_[4])
  );
  NAND _567_ (
    .A(clk_f_s),
    .B(data_rx11s_synt[4]),
    .Y(_271_)
  );
  NAND _568_ (
    .A(_211_),
    .B(_271_),
    .Y(_006_[5])
  );
  NAND _569_ (
    .A(clk_f_s),
    .B(data_rx11s_synt[5]),
    .Y(_272_)
  );
  NAND _570_ (
    .A(_216_),
    .B(_272_),
    .Y(_006_[6])
  );
  NAND _571_ (
    .A(clk_f_s),
    .B(data_rx11s_synt[6]),
    .Y(_273_)
  );
  NAND _572_ (
    .A(_221_),
    .B(_273_),
    .Y(_006_[7])
  );
  NAND _573_ (
    .A(clk_f_s),
    .B(data_rx11s_synt[7]),
    .Y(_274_)
  );
  NAND _574_ (
    .A(_226_),
    .B(_274_),
    .Y(_006_[8])
  );
  NAND _575_ (
    .A(clk_f_s),
    .B(valid_rx00s_synt),
    .Y(_275_)
  );
  NAND _576_ (
    .A(_119_),
    .B(_275_),
    .Y(_004_[0])
  );
  NAND _577_ (
    .A(clk_f_s),
    .B(data_rx00s_synt[0]),
    .Y(_276_)
  );
  NAND _578_ (
    .A(_148_),
    .B(_276_),
    .Y(_004_[1])
  );
  NAND _579_ (
    .A(clk_f_s),
    .B(data_rx00s_synt[1]),
    .Y(_277_)
  );
  NAND _580_ (
    .A(_153_),
    .B(_277_),
    .Y(_004_[2])
  );
  NAND _581_ (
    .A(clk_f_s),
    .B(data_rx00s_synt[2]),
    .Y(_278_)
  );
  NAND _582_ (
    .A(_158_),
    .B(_278_),
    .Y(_004_[3])
  );
  NAND _583_ (
    .A(clk_f_s),
    .B(data_rx00s_synt[3]),
    .Y(_279_)
  );
  NAND _584_ (
    .A(_163_),
    .B(_279_),
    .Y(_004_[4])
  );
  NAND _585_ (
    .A(clk_f_s),
    .B(data_rx00s_synt[4]),
    .Y(_280_)
  );
  NAND _586_ (
    .A(_168_),
    .B(_280_),
    .Y(_004_[5])
  );
  NAND _587_ (
    .A(clk_f_s),
    .B(data_rx00s_synt[5]),
    .Y(_281_)
  );
  NAND _588_ (
    .A(_173_),
    .B(_281_),
    .Y(_004_[6])
  );
  NAND _589_ (
    .A(clk_f_s),
    .B(data_rx00s_synt[6]),
    .Y(_282_)
  );
  NAND _590_ (
    .A(_178_),
    .B(_282_),
    .Y(_004_[7])
  );
  NAND _591_ (
    .A(clk_f_s),
    .B(data_rx00s_synt[7]),
    .Y(_283_)
  );
  NAND _592_ (
    .A(_183_),
    .B(_283_),
    .Y(_004_[8])
  );
  NOT _593_ (
    .A(clk_2f),
    .Y(_013_)
  );
  NOT _594_ (
    .A(clk_2f),
    .Y(_014_)
  );
  NOT _595_ (
    .A(clk_2f),
    .Y(_015_)
  );
  NOT _596_ (
    .A(clk_2f),
    .Y(_016_)
  );
  NOT _597_ (
    .A(clk_2f),
    .Y(_017_)
  );
  NOT _598_ (
    .A(clk_2f),
    .Y(_018_)
  );
  NOT _599_ (
    .A(clk_2f),
    .Y(_019_)
  );
  NOT _600_ (
    .A(clk_2f),
    .Y(_020_)
  );
  NOT _601_ (
    .A(clk_2f),
    .Y(_021_)
  );
  NOT _602_ (
    .A(clk_2f),
    .Y(_022_)
  );
  NOT _603_ (
    .A(clk_2f),
    .Y(_023_)
  );
  NOT _604_ (
    .A(clk_2f),
    .Y(_024_)
  );
  NOT _605_ (
    .A(clk_2f),
    .Y(_025_)
  );
  NOT _606_ (
    .A(clk_2f),
    .Y(_026_)
  );
  NOT _607_ (
    .A(clk_2f),
    .Y(_027_)
  );
  NOT _608_ (
    .A(clk_2f),
    .Y(_028_)
  );
  NOT _609_ (
    .A(clk_2f),
    .Y(_029_)
  );
  NOT _610_ (
    .A(clk_2f),
    .Y(_030_)
  );
  NOT _611_ (
    .A(clk_2f),
    .Y(_031_)
  );
  NOT _612_ (
    .A(clk_2f),
    .Y(_032_)
  );
  NOT _613_ (
    .A(clk_2f),
    .Y(_033_)
  );
  NOT _614_ (
    .A(clk_2f),
    .Y(_034_)
  );
  NOT _615_ (
    .A(clk_2f),
    .Y(_035_)
  );
  NOT _616_ (
    .A(clk_2f),
    .Y(_036_)
  );
  NOT _617_ (
    .A(clk_2f),
    .Y(_037_)
  );
  NOT _618_ (
    .A(clk_2f),
    .Y(_038_)
  );
  NOT _619_ (
    .A(clk_2f),
    .Y(_039_)
  );
  NOT _620_ (
    .A(clk_2f),
    .Y(_040_)
  );
  NOT _621_ (
    .A(clk_2f),
    .Y(_041_)
  );
  NOT _622_ (
    .A(clk_2f),
    .Y(_042_)
  );
  NOT _623_ (
    .A(clk_2f),
    .Y(_043_)
  );
  NOT _624_ (
    .A(clk_2f),
    .Y(_044_)
  );
  NOT _625_ (
    .A(clk_2f),
    .Y(_045_)
  );
  NOT _626_ (
    .A(clk_2f),
    .Y(_046_)
  );
  NOT _627_ (
    .A(clk_2f),
    .Y(_047_)
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _628_ (
    .C(clk_2f),
    .D(_008_),
    .Q(valid_rx0_synt)
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _629_ (
    .C(clk_2f),
    .D(_000_[0]),
    .Q(data_rx0_synt[0])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _630_ (
    .C(clk_2f),
    .D(_000_[1]),
    .Q(data_rx0_synt[1])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _631_ (
    .C(clk_2f),
    .D(_000_[2]),
    .Q(data_rx0_synt[2])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _632_ (
    .C(clk_2f),
    .D(_000_[3]),
    .Q(data_rx0_synt[3])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _633_ (
    .C(clk_2f),
    .D(_000_[4]),
    .Q(data_rx0_synt[4])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _634_ (
    .C(clk_2f),
    .D(_000_[5]),
    .Q(data_rx0_synt[5])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _635_ (
    .C(clk_2f),
    .D(_000_[6]),
    .Q(data_rx0_synt[6])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _636_ (
    .C(clk_2f),
    .D(_000_[7]),
    .Q(data_rx0_synt[7])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _637_ (
    .C(clk_2f),
    .D(_001_[0]),
    .Q(data_rx1_synt[0])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _638_ (
    .C(clk_2f),
    .D(_001_[1]),
    .Q(data_rx1_synt[1])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _639_ (
    .C(clk_2f),
    .D(_001_[2]),
    .Q(data_rx1_synt[2])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _640_ (
    .C(clk_2f),
    .D(_001_[3]),
    .Q(data_rx1_synt[3])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _641_ (
    .C(clk_2f),
    .D(_001_[4]),
    .Q(data_rx1_synt[4])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _642_ (
    .C(clk_2f),
    .D(_001_[5]),
    .Q(data_rx1_synt[5])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _643_ (
    .C(clk_2f),
    .D(_001_[6]),
    .Q(data_rx1_synt[6])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _644_ (
    .C(clk_2f),
    .D(_001_[7]),
    .Q(data_rx1_synt[7])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _645_ (
    .C(clk_2f),
    .D(_002_[0]),
    .Q(data_rx2_synt[0])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _646_ (
    .C(clk_2f),
    .D(_002_[1]),
    .Q(data_rx2_synt[1])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _647_ (
    .C(clk_2f),
    .D(_002_[2]),
    .Q(data_rx2_synt[2])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _648_ (
    .C(clk_2f),
    .D(_002_[3]),
    .Q(data_rx2_synt[3])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _649_ (
    .C(clk_2f),
    .D(_002_[4]),
    .Q(data_rx2_synt[4])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _650_ (
    .C(clk_2f),
    .D(_002_[5]),
    .Q(data_rx2_synt[5])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _651_ (
    .C(clk_2f),
    .D(_002_[6]),
    .Q(data_rx2_synt[6])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _652_ (
    .C(clk_2f),
    .D(_002_[7]),
    .Q(data_rx2_synt[7])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _653_ (
    .C(clk_2f),
    .D(_009_),
    .Q(valid_rx1_synt)
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _654_ (
    .C(clk_2f),
    .D(_010_),
    .Q(valid_rx2_synt)
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _655_ (
    .C(clk_2f),
    .D(_011_),
    .Q(valid_rx3_synt)
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _656_ (
    .C(clk_2f),
    .D(_003_[0]),
    .Q(data_rx3_synt[0])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _657_ (
    .C(clk_2f),
    .D(_003_[1]),
    .Q(data_rx3_synt[1])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _658_ (
    .C(clk_2f),
    .D(_003_[2]),
    .Q(data_rx3_synt[2])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _659_ (
    .C(clk_2f),
    .D(_003_[3]),
    .Q(data_rx3_synt[3])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _660_ (
    .C(clk_2f),
    .D(_003_[4]),
    .Q(data_rx3_synt[4])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _661_ (
    .C(clk_2f),
    .D(_003_[5]),
    .Q(data_rx3_synt[5])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _662_ (
    .C(clk_2f),
    .D(_003_[6]),
    .Q(data_rx3_synt[6])
  );
  (* src = "synth_demux2x4_8bits.v:41" *)
  DFF _663_ (
    .C(clk_2f),
    .D(_003_[7]),
    .Q(data_rx3_synt[7])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _664_ (
    .C(_012_),
    .D(_004_[0]),
    .Q(paq_0[0])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _665_ (
    .C(_013_),
    .D(_004_[1]),
    .Q(paq_0[1])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _666_ (
    .C(_014_),
    .D(_004_[2]),
    .Q(paq_0[2])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _667_ (
    .C(_015_),
    .D(_004_[3]),
    .Q(paq_0[3])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _668_ (
    .C(_016_),
    .D(_004_[4]),
    .Q(paq_0[4])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _669_ (
    .C(_017_),
    .D(_004_[5]),
    .Q(paq_0[5])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _670_ (
    .C(_018_),
    .D(_004_[6]),
    .Q(paq_0[6])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _671_ (
    .C(_019_),
    .D(_004_[7]),
    .Q(paq_0[7])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _672_ (
    .C(_020_),
    .D(_004_[8]),
    .Q(paq_0[8])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _673_ (
    .C(_021_),
    .D(_005_[0]),
    .Q(paq_1[0])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _674_ (
    .C(_022_),
    .D(_005_[1]),
    .Q(paq_1[1])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _675_ (
    .C(_023_),
    .D(_005_[2]),
    .Q(paq_1[2])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _676_ (
    .C(_024_),
    .D(_005_[3]),
    .Q(paq_1[3])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _677_ (
    .C(_025_),
    .D(_005_[4]),
    .Q(paq_1[4])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _678_ (
    .C(_026_),
    .D(_005_[5]),
    .Q(paq_1[5])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _679_ (
    .C(_027_),
    .D(_005_[6]),
    .Q(paq_1[6])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _680_ (
    .C(_028_),
    .D(_005_[7]),
    .Q(paq_1[7])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _681_ (
    .C(_029_),
    .D(_005_[8]),
    .Q(paq_1[8])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _682_ (
    .C(_030_),
    .D(_006_[0]),
    .Q(paq_2[0])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _683_ (
    .C(_031_),
    .D(_006_[1]),
    .Q(paq_2[1])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _684_ (
    .C(_032_),
    .D(_006_[2]),
    .Q(paq_2[2])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _685_ (
    .C(_033_),
    .D(_006_[3]),
    .Q(paq_2[3])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _686_ (
    .C(_034_),
    .D(_006_[4]),
    .Q(paq_2[4])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _687_ (
    .C(_035_),
    .D(_006_[5]),
    .Q(paq_2[5])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _688_ (
    .C(_036_),
    .D(_006_[6]),
    .Q(paq_2[6])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _689_ (
    .C(_037_),
    .D(_006_[7]),
    .Q(paq_2[7])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _690_ (
    .C(_038_),
    .D(_006_[8]),
    .Q(paq_2[8])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _691_ (
    .C(_039_),
    .D(_007_[0]),
    .Q(paq_3[0])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _692_ (
    .C(_040_),
    .D(_007_[1]),
    .Q(paq_3[1])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _693_ (
    .C(_041_),
    .D(_007_[2]),
    .Q(paq_3[2])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _694_ (
    .C(_042_),
    .D(_007_[3]),
    .Q(paq_3[3])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _695_ (
    .C(_043_),
    .D(_007_[4]),
    .Q(paq_3[4])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _696_ (
    .C(_044_),
    .D(_007_[5]),
    .Q(paq_3[5])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _697_ (
    .C(_045_),
    .D(_007_[6]),
    .Q(paq_3[6])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _698_ (
    .C(_046_),
    .D(_007_[7]),
    .Q(paq_3[7])
  );
  (* src = "synth_demux2x4_8bits.v:30" *)
  DFF _699_ (
    .C(_047_),
    .D(_007_[8]),
    .Q(paq_3[8])
  );
  (* src = "synth_demux2x4_8bits.v:24" *)
  DFF _700_ (
    .C(clk_2f),
    .D(reset),
    .Q(reset_s)
  );
  (* src = "synth_demux2x4_8bits.v:24" *)
  DFF _701_ (
    .C(clk_2f),
    .D(clk_f),
    .Q(clk_f_s)
  );
endmodule

(* src = "synth_etapaflops1.v:1" *)
module synth_etapaflops1(data_0ps_synt, data_1ps_synt, data_2ps_synt, data_3ps_synt, valid_0ps_synt, valid_1ps_synt, valid_2ps_synt, valid_3ps_synt, data_0p, data_1p, data_2p, data_3p, valid_0p, valid_1p, valid_2p, valid_3p, clk_f);
  (* src = "synth_etapaflops1.v:8" *)
  input clk_f;
  (* src = "synth_etapaflops1.v:5" *)
  input [7:0] data_0p;
  (* src = "synth_etapaflops1.v:1" *)
  output [7:0] data_0ps_synt;
  (* src = "synth_etapaflops1.v:5" *)
  input [7:0] data_1p;
  (* src = "synth_etapaflops1.v:1" *)
  output [7:0] data_1ps_synt;
  (* src = "synth_etapaflops1.v:6" *)
  input [7:0] data_2p;
  (* src = "synth_etapaflops1.v:2" *)
  output [7:0] data_2ps_synt;
  (* src = "synth_etapaflops1.v:6" *)
  input [7:0] data_3p;
  (* src = "synth_etapaflops1.v:2" *)
  output [7:0] data_3ps_synt;
  (* src = "synth_etapaflops1.v:7" *)
  input valid_0p;
  (* src = "synth_etapaflops1.v:3" *)
  output valid_0ps_synt;
  (* src = "synth_etapaflops1.v:7" *)
  input valid_1p;
  (* src = "synth_etapaflops1.v:3" *)
  output valid_1ps_synt;
  (* src = "synth_etapaflops1.v:8" *)
  input valid_2p;
  (* src = "synth_etapaflops1.v:4" *)
  output valid_2ps_synt;
  (* src = "synth_etapaflops1.v:8" *)
  input valid_3p;
  (* src = "synth_etapaflops1.v:4" *)
  output valid_3ps_synt;
  (* src = "synth_etapaflops1.v:10" *)
  DFF _00_ (
    .C(clk_f),
    .D(valid_2p),
    .Q(valid_2ps_synt)
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _01_ (
    .C(clk_f),
    .D(valid_3p),
    .Q(valid_3ps_synt)
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _02_ (
    .C(clk_f),
    .D(data_0p[0]),
    .Q(data_0ps_synt[0])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _03_ (
    .C(clk_f),
    .D(data_0p[1]),
    .Q(data_0ps_synt[1])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _04_ (
    .C(clk_f),
    .D(data_0p[2]),
    .Q(data_0ps_synt[2])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _05_ (
    .C(clk_f),
    .D(data_0p[3]),
    .Q(data_0ps_synt[3])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _06_ (
    .C(clk_f),
    .D(data_0p[4]),
    .Q(data_0ps_synt[4])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _07_ (
    .C(clk_f),
    .D(data_0p[5]),
    .Q(data_0ps_synt[5])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _08_ (
    .C(clk_f),
    .D(data_0p[6]),
    .Q(data_0ps_synt[6])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _09_ (
    .C(clk_f),
    .D(data_0p[7]),
    .Q(data_0ps_synt[7])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _10_ (
    .C(clk_f),
    .D(valid_0p),
    .Q(valid_0ps_synt)
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _11_ (
    .C(clk_f),
    .D(valid_1p),
    .Q(valid_1ps_synt)
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _12_ (
    .C(clk_f),
    .D(data_1p[0]),
    .Q(data_1ps_synt[0])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _13_ (
    .C(clk_f),
    .D(data_1p[1]),
    .Q(data_1ps_synt[1])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _14_ (
    .C(clk_f),
    .D(data_1p[2]),
    .Q(data_1ps_synt[2])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _15_ (
    .C(clk_f),
    .D(data_1p[3]),
    .Q(data_1ps_synt[3])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _16_ (
    .C(clk_f),
    .D(data_1p[4]),
    .Q(data_1ps_synt[4])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _17_ (
    .C(clk_f),
    .D(data_1p[5]),
    .Q(data_1ps_synt[5])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _18_ (
    .C(clk_f),
    .D(data_1p[6]),
    .Q(data_1ps_synt[6])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _19_ (
    .C(clk_f),
    .D(data_1p[7]),
    .Q(data_1ps_synt[7])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _20_ (
    .C(clk_f),
    .D(data_2p[0]),
    .Q(data_2ps_synt[0])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _21_ (
    .C(clk_f),
    .D(data_2p[1]),
    .Q(data_2ps_synt[1])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _22_ (
    .C(clk_f),
    .D(data_2p[2]),
    .Q(data_2ps_synt[2])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _23_ (
    .C(clk_f),
    .D(data_2p[3]),
    .Q(data_2ps_synt[3])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _24_ (
    .C(clk_f),
    .D(data_2p[4]),
    .Q(data_2ps_synt[4])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _25_ (
    .C(clk_f),
    .D(data_2p[5]),
    .Q(data_2ps_synt[5])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _26_ (
    .C(clk_f),
    .D(data_2p[6]),
    .Q(data_2ps_synt[6])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _27_ (
    .C(clk_f),
    .D(data_2p[7]),
    .Q(data_2ps_synt[7])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _28_ (
    .C(clk_f),
    .D(data_3p[0]),
    .Q(data_3ps_synt[0])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _29_ (
    .C(clk_f),
    .D(data_3p[1]),
    .Q(data_3ps_synt[1])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _30_ (
    .C(clk_f),
    .D(data_3p[2]),
    .Q(data_3ps_synt[2])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _31_ (
    .C(clk_f),
    .D(data_3p[3]),
    .Q(data_3ps_synt[3])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _32_ (
    .C(clk_f),
    .D(data_3p[4]),
    .Q(data_3ps_synt[4])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _33_ (
    .C(clk_f),
    .D(data_3p[5]),
    .Q(data_3ps_synt[5])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _34_ (
    .C(clk_f),
    .D(data_3p[6]),
    .Q(data_3ps_synt[6])
  );
  (* src = "synth_etapaflops1.v:10" *)
  DFF _35_ (
    .C(clk_f),
    .D(data_3p[7]),
    .Q(data_3ps_synt[7])
  );
endmodule

(* src = "synth_etapaflops2.v:1" *)
module synth_etapaflops2(data_0_synt, data_1_synt, data_2_synt, data_3_synt, valid_0_synt, valid_1_synt, valid_2_synt, valid_3_synt, data_0rf_synt, data_1rf_synt, data_2rf_synt, data_3rf_synt, valid_0rf_synt, valid_1rf_synt, valid_2rf_synt, valid_3rf_synt, clk_f);
  (* src = "synth_etapaflops2.v:8" *)
  input clk_f;
  (* src = "synth_etapaflops2.v:1" *)
  output [7:0] data_0_synt;
  (* src = "synth_etapaflops2.v:5" *)
  input [7:0] data_0rf_synt;
  (* src = "synth_etapaflops2.v:1" *)
  output [7:0] data_1_synt;
  (* src = "synth_etapaflops2.v:5" *)
  input [7:0] data_1rf_synt;
  (* src = "synth_etapaflops2.v:2" *)
  output [7:0] data_2_synt;
  (* src = "synth_etapaflops2.v:6" *)
  input [7:0] data_2rf_synt;
  (* src = "synth_etapaflops2.v:2" *)
  output [7:0] data_3_synt;
  (* src = "synth_etapaflops2.v:6" *)
  input [7:0] data_3rf_synt;
  (* src = "synth_etapaflops2.v:3" *)
  output valid_0_synt;
  (* src = "synth_etapaflops2.v:7" *)
  input valid_0rf_synt;
  (* src = "synth_etapaflops2.v:3" *)
  output valid_1_synt;
  (* src = "synth_etapaflops2.v:7" *)
  input valid_1rf_synt;
  (* src = "synth_etapaflops2.v:4" *)
  output valid_2_synt;
  (* src = "synth_etapaflops2.v:8" *)
  input valid_2rf_synt;
  (* src = "synth_etapaflops2.v:4" *)
  output valid_3_synt;
  (* src = "synth_etapaflops2.v:8" *)
  input valid_3rf_synt;
  (* src = "synth_etapaflops2.v:10" *)
  DFF _00_ (
    .C(clk_f),
    .D(data_1rf_synt[0]),
    .Q(data_1_synt[0])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _01_ (
    .C(clk_f),
    .D(data_1rf_synt[1]),
    .Q(data_1_synt[1])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _02_ (
    .C(clk_f),
    .D(data_1rf_synt[2]),
    .Q(data_1_synt[2])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _03_ (
    .C(clk_f),
    .D(data_1rf_synt[3]),
    .Q(data_1_synt[3])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _04_ (
    .C(clk_f),
    .D(data_1rf_synt[4]),
    .Q(data_1_synt[4])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _05_ (
    .C(clk_f),
    .D(data_1rf_synt[5]),
    .Q(data_1_synt[5])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _06_ (
    .C(clk_f),
    .D(data_1rf_synt[6]),
    .Q(data_1_synt[6])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _07_ (
    .C(clk_f),
    .D(data_1rf_synt[7]),
    .Q(data_1_synt[7])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _08_ (
    .C(clk_f),
    .D(data_2rf_synt[0]),
    .Q(data_2_synt[0])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _09_ (
    .C(clk_f),
    .D(data_2rf_synt[1]),
    .Q(data_2_synt[1])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _10_ (
    .C(clk_f),
    .D(data_2rf_synt[2]),
    .Q(data_2_synt[2])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _11_ (
    .C(clk_f),
    .D(data_2rf_synt[3]),
    .Q(data_2_synt[3])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _12_ (
    .C(clk_f),
    .D(data_2rf_synt[4]),
    .Q(data_2_synt[4])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _13_ (
    .C(clk_f),
    .D(data_2rf_synt[5]),
    .Q(data_2_synt[5])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _14_ (
    .C(clk_f),
    .D(data_2rf_synt[6]),
    .Q(data_2_synt[6])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _15_ (
    .C(clk_f),
    .D(data_2rf_synt[7]),
    .Q(data_2_synt[7])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _16_ (
    .C(clk_f),
    .D(valid_0rf_synt),
    .Q(valid_0_synt)
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _17_ (
    .C(clk_f),
    .D(valid_1rf_synt),
    .Q(valid_1_synt)
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _18_ (
    .C(clk_f),
    .D(valid_2rf_synt),
    .Q(valid_2_synt)
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _19_ (
    .C(clk_f),
    .D(valid_3rf_synt),
    .Q(valid_3_synt)
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _20_ (
    .C(clk_f),
    .D(data_0rf_synt[0]),
    .Q(data_0_synt[0])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _21_ (
    .C(clk_f),
    .D(data_0rf_synt[1]),
    .Q(data_0_synt[1])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _22_ (
    .C(clk_f),
    .D(data_0rf_synt[2]),
    .Q(data_0_synt[2])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _23_ (
    .C(clk_f),
    .D(data_0rf_synt[3]),
    .Q(data_0_synt[3])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _24_ (
    .C(clk_f),
    .D(data_0rf_synt[4]),
    .Q(data_0_synt[4])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _25_ (
    .C(clk_f),
    .D(data_0rf_synt[5]),
    .Q(data_0_synt[5])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _26_ (
    .C(clk_f),
    .D(data_0rf_synt[6]),
    .Q(data_0_synt[6])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _27_ (
    .C(clk_f),
    .D(data_0rf_synt[7]),
    .Q(data_0_synt[7])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _28_ (
    .C(clk_f),
    .D(data_3rf_synt[0]),
    .Q(data_3_synt[0])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _29_ (
    .C(clk_f),
    .D(data_3rf_synt[1]),
    .Q(data_3_synt[1])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _30_ (
    .C(clk_f),
    .D(data_3rf_synt[2]),
    .Q(data_3_synt[2])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _31_ (
    .C(clk_f),
    .D(data_3rf_synt[3]),
    .Q(data_3_synt[3])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _32_ (
    .C(clk_f),
    .D(data_3rf_synt[4]),
    .Q(data_3_synt[4])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _33_ (
    .C(clk_f),
    .D(data_3rf_synt[5]),
    .Q(data_3_synt[5])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _34_ (
    .C(clk_f),
    .D(data_3rf_synt[6]),
    .Q(data_3_synt[6])
  );
  (* src = "synth_etapaflops2.v:10" *)
  DFF _35_ (
    .C(clk_f),
    .D(data_3rf_synt[7]),
    .Q(data_3_synt[7])
  );
endmodule

(* src = "synth_etapaflops3.v:1" *)
module synth_etapaflops3(data_rx00s_synt, data_rx11s_synt, valid_rx00s_synt, valid_rx11s_synt, data_rx00_synt, data_rx11_synt, valid_rx00_synt, valid_rx11_synt, clk_2f);
  (* src = "synth_etapaflops3.v:5" *)
  input clk_2f;
  (* src = "synth_etapaflops3.v:3" *)
  input [7:0] data_rx00_synt;
  (* src = "synth_etapaflops3.v:1" *)
  output [7:0] data_rx00s_synt;
  (* src = "synth_etapaflops3.v:3" *)
  input [7:0] data_rx11_synt;
  (* src = "synth_etapaflops3.v:1" *)
  output [7:0] data_rx11s_synt;
  (* src = "synth_etapaflops3.v:4" *)
  input valid_rx00_synt;
  (* src = "synth_etapaflops3.v:2" *)
  output valid_rx00s_synt;
  (* src = "synth_etapaflops3.v:4" *)
  input valid_rx11_synt;
  (* src = "synth_etapaflops3.v:2" *)
  output valid_rx11s_synt;
  (* src = "synth_etapaflops3.v:7" *)
  DFF _00_ (
    .C(clk_2f),
    .D(valid_rx00_synt),
    .Q(valid_rx00s_synt)
  );
  (* src = "synth_etapaflops3.v:7" *)
  DFF _01_ (
    .C(clk_2f),
    .D(data_rx00_synt[0]),
    .Q(data_rx00s_synt[0])
  );
  (* src = "synth_etapaflops3.v:7" *)
  DFF _02_ (
    .C(clk_2f),
    .D(data_rx00_synt[1]),
    .Q(data_rx00s_synt[1])
  );
  (* src = "synth_etapaflops3.v:7" *)
  DFF _03_ (
    .C(clk_2f),
    .D(data_rx00_synt[2]),
    .Q(data_rx00s_synt[2])
  );
  (* src = "synth_etapaflops3.v:7" *)
  DFF _04_ (
    .C(clk_2f),
    .D(data_rx00_synt[3]),
    .Q(data_rx00s_synt[3])
  );
  (* src = "synth_etapaflops3.v:7" *)
  DFF _05_ (
    .C(clk_2f),
    .D(data_rx00_synt[4]),
    .Q(data_rx00s_synt[4])
  );
  (* src = "synth_etapaflops3.v:7" *)
  DFF _06_ (
    .C(clk_2f),
    .D(data_rx00_synt[5]),
    .Q(data_rx00s_synt[5])
  );
  (* src = "synth_etapaflops3.v:7" *)
  DFF _07_ (
    .C(clk_2f),
    .D(data_rx00_synt[6]),
    .Q(data_rx00s_synt[6])
  );
  (* src = "synth_etapaflops3.v:7" *)
  DFF _08_ (
    .C(clk_2f),
    .D(data_rx00_synt[7]),
    .Q(data_rx00s_synt[7])
  );
  (* src = "synth_etapaflops3.v:7" *)
  DFF _09_ (
    .C(clk_2f),
    .D(data_rx11_synt[0]),
    .Q(data_rx11s_synt[0])
  );
  (* src = "synth_etapaflops3.v:7" *)
  DFF _10_ (
    .C(clk_2f),
    .D(data_rx11_synt[1]),
    .Q(data_rx11s_synt[1])
  );
  (* src = "synth_etapaflops3.v:7" *)
  DFF _11_ (
    .C(clk_2f),
    .D(data_rx11_synt[2]),
    .Q(data_rx11s_synt[2])
  );
  (* src = "synth_etapaflops3.v:7" *)
  DFF _12_ (
    .C(clk_2f),
    .D(data_rx11_synt[3]),
    .Q(data_rx11s_synt[3])
  );
  (* src = "synth_etapaflops3.v:7" *)
  DFF _13_ (
    .C(clk_2f),
    .D(data_rx11_synt[4]),
    .Q(data_rx11s_synt[4])
  );
  (* src = "synth_etapaflops3.v:7" *)
  DFF _14_ (
    .C(clk_2f),
    .D(data_rx11_synt[5]),
    .Q(data_rx11s_synt[5])
  );
  (* src = "synth_etapaflops3.v:7" *)
  DFF _15_ (
    .C(clk_2f),
    .D(data_rx11_synt[6]),
    .Q(data_rx11s_synt[6])
  );
  (* src = "synth_etapaflops3.v:7" *)
  DFF _16_ (
    .C(clk_2f),
    .D(data_rx11_synt[7]),
    .Q(data_rx11s_synt[7])
  );
  (* src = "synth_etapaflops3.v:7" *)
  DFF _17_ (
    .C(clk_2f),
    .D(valid_rx11_synt),
    .Q(valid_rx11s_synt)
  );
endmodule

(* src = "synth_mux2x1_8bits.v:10" *)
module synth_mux2x1_8bits(data_000_synt, valid_000_synt, data_00_synt, data_11_synt, valid_00_synt, valid_11_synt, clk_4f, clk_2f, reset);
  (* src = "synth_mux2x1_8bits.v:40" *)
  wire [7:0] _000_;
  (* src = "synth_mux2x1_8bits.v:31" *)
  wire [8:0] _001_;
  (* src = "synth_mux2x1_8bits.v:40" *)
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  (* src = "synth_mux2x1_8bits.v:14" *)
  input clk_2f;
  (* src = "synth_mux2x1_8bits.v:14" *)
  input clk_4f;
  (* src = "synth_mux2x1_8bits.v:12" *)
  input [7:0] data_00_synt;
  (* src = "synth_mux2x1_8bits.v:10" *)
  output [7:0] data_000_synt;
  (* src = "synth_mux2x1_8bits.v:12" *)
  input [7:0] data_11_synt;
  (* src = "synth_mux2x1_8bits.v:18" *)
  wire [8:0] paq_000;
  (* src = "synth_mux2x1_8bits.v:16" *)
  wire [8:0] paq_0_x;
  (* src = "synth_mux2x1_8bits.v:17" *)
  wire [8:0] paq_1_x;
  (* src = "synth_mux2x1_8bits.v:14" *)
  input reset;
  (* src = "synth_mux2x1_8bits.v:19" *)
  wire reset_s;
  (* src = "synth_mux2x1_8bits.v:13" *)
  input valid_00_synt;
  (* src = "synth_mux2x1_8bits.v:11" *)
  output valid_000_synt;
  (* src = "synth_mux2x1_8bits.v:13" *)
  input valid_11_synt;
  NOT _040_ (
    .A(clk_2f),
    .Y(_015_)
  );
  NOT _041_ (
    .A(clk_4f),
    .Y(_003_)
  );
  NAND _042_ (
    .A(data_00_synt[0]),
    .B(clk_2f),
    .Y(_016_)
  );
  NAND _043_ (
    .A(data_11_synt[0]),
    .B(_015_),
    .Y(_017_)
  );
  NAND _044_ (
    .A(_016_),
    .B(_017_),
    .Y(_001_[1])
  );
  NAND _045_ (
    .A(clk_2f),
    .B(data_00_synt[1]),
    .Y(_018_)
  );
  NAND _046_ (
    .A(_015_),
    .B(data_11_synt[1]),
    .Y(_019_)
  );
  NAND _047_ (
    .A(_018_),
    .B(_019_),
    .Y(_001_[2])
  );
  NAND _048_ (
    .A(clk_2f),
    .B(data_00_synt[2]),
    .Y(_020_)
  );
  NAND _049_ (
    .A(_015_),
    .B(data_11_synt[2]),
    .Y(_021_)
  );
  NAND _050_ (
    .A(_020_),
    .B(_021_),
    .Y(_001_[3])
  );
  NAND _051_ (
    .A(clk_2f),
    .B(data_00_synt[3]),
    .Y(_022_)
  );
  NAND _052_ (
    .A(_015_),
    .B(data_11_synt[3]),
    .Y(_023_)
  );
  NAND _053_ (
    .A(_022_),
    .B(_023_),
    .Y(_001_[4])
  );
  NAND _054_ (
    .A(clk_2f),
    .B(data_00_synt[4]),
    .Y(_024_)
  );
  NAND _055_ (
    .A(_015_),
    .B(data_11_synt[4]),
    .Y(_025_)
  );
  NAND _056_ (
    .A(_024_),
    .B(_025_),
    .Y(_001_[5])
  );
  NAND _057_ (
    .A(clk_2f),
    .B(data_00_synt[5]),
    .Y(_026_)
  );
  NAND _058_ (
    .A(_015_),
    .B(data_11_synt[5]),
    .Y(_027_)
  );
  NAND _059_ (
    .A(_026_),
    .B(_027_),
    .Y(_001_[6])
  );
  NAND _060_ (
    .A(clk_2f),
    .B(data_00_synt[6]),
    .Y(_028_)
  );
  NAND _061_ (
    .A(_015_),
    .B(data_11_synt[6]),
    .Y(_029_)
  );
  NAND _062_ (
    .A(_028_),
    .B(_029_),
    .Y(_001_[7])
  );
  NAND _063_ (
    .A(clk_2f),
    .B(data_00_synt[7]),
    .Y(_030_)
  );
  NAND _064_ (
    .A(_015_),
    .B(data_11_synt[7]),
    .Y(_031_)
  );
  NAND _065_ (
    .A(_030_),
    .B(_031_),
    .Y(_001_[8])
  );
  NAND _066_ (
    .A(paq_000[1]),
    .B(reset_s),
    .Y(_032_)
  );
  NOT _067_ (
    .A(_032_),
    .Y(_000_[0])
  );
  NAND _068_ (
    .A(reset_s),
    .B(paq_000[2]),
    .Y(_033_)
  );
  NOT _069_ (
    .A(_033_),
    .Y(_000_[1])
  );
  NAND _070_ (
    .A(reset_s),
    .B(paq_000[3]),
    .Y(_034_)
  );
  NOT _071_ (
    .A(_034_),
    .Y(_000_[2])
  );
  NAND _072_ (
    .A(reset_s),
    .B(paq_000[4]),
    .Y(_035_)
  );
  NOT _073_ (
    .A(_035_),
    .Y(_000_[3])
  );
  NAND _074_ (
    .A(reset_s),
    .B(paq_000[5]),
    .Y(_036_)
  );
  NOT _075_ (
    .A(_036_),
    .Y(_000_[4])
  );
  NAND _076_ (
    .A(reset_s),
    .B(paq_000[6]),
    .Y(_037_)
  );
  NOT _077_ (
    .A(_037_),
    .Y(_000_[5])
  );
  NAND _078_ (
    .A(reset_s),
    .B(paq_000[7]),
    .Y(_038_)
  );
  NOT _079_ (
    .A(_038_),
    .Y(_000_[6])
  );
  NAND _080_ (
    .A(reset_s),
    .B(paq_000[8]),
    .Y(_039_)
  );
  NOT _081_ (
    .A(_039_),
    .Y(_000_[7])
  );
  NAND _082_ (
    .A(reset_s),
    .B(paq_000[0]),
    .Y(_012_)
  );
  NOT _083_ (
    .A(_012_),
    .Y(_002_)
  );
  NAND _084_ (
    .A(clk_2f),
    .B(valid_00_synt),
    .Y(_013_)
  );
  NAND _085_ (
    .A(_015_),
    .B(valid_11_synt),
    .Y(_014_)
  );
  NAND _086_ (
    .A(_013_),
    .B(_014_),
    .Y(_001_[0])
  );
  NOT _087_ (
    .A(clk_4f),
    .Y(_004_)
  );
  NOT _088_ (
    .A(clk_4f),
    .Y(_005_)
  );
  NOT _089_ (
    .A(clk_4f),
    .Y(_006_)
  );
  NOT _090_ (
    .A(clk_4f),
    .Y(_007_)
  );
  NOT _091_ (
    .A(clk_4f),
    .Y(_008_)
  );
  NOT _092_ (
    .A(clk_4f),
    .Y(_009_)
  );
  NOT _093_ (
    .A(clk_4f),
    .Y(_010_)
  );
  NOT _094_ (
    .A(clk_4f),
    .Y(_011_)
  );
  (* src = "synth_mux2x1_8bits.v:40" *)
  DFF _095_ (
    .C(clk_4f),
    .D(_000_[0]),
    .Q(data_000_synt[0])
  );
  (* src = "synth_mux2x1_8bits.v:40" *)
  DFF _096_ (
    .C(clk_4f),
    .D(_000_[1]),
    .Q(data_000_synt[1])
  );
  (* src = "synth_mux2x1_8bits.v:40" *)
  DFF _097_ (
    .C(clk_4f),
    .D(_000_[2]),
    .Q(data_000_synt[2])
  );
  (* src = "synth_mux2x1_8bits.v:40" *)
  DFF _098_ (
    .C(clk_4f),
    .D(_000_[3]),
    .Q(data_000_synt[3])
  );
  (* src = "synth_mux2x1_8bits.v:40" *)
  DFF _099_ (
    .C(clk_4f),
    .D(_000_[4]),
    .Q(data_000_synt[4])
  );
  (* src = "synth_mux2x1_8bits.v:40" *)
  DFF _100_ (
    .C(clk_4f),
    .D(_000_[5]),
    .Q(data_000_synt[5])
  );
  (* src = "synth_mux2x1_8bits.v:40" *)
  DFF _101_ (
    .C(clk_4f),
    .D(_000_[6]),
    .Q(data_000_synt[6])
  );
  (* src = "synth_mux2x1_8bits.v:40" *)
  DFF _102_ (
    .C(clk_4f),
    .D(_000_[7]),
    .Q(data_000_synt[7])
  );
  (* src = "synth_mux2x1_8bits.v:40" *)
  DFF _103_ (
    .C(clk_4f),
    .D(_002_),
    .Q(valid_000_synt)
  );
  (* src = "synth_mux2x1_8bits.v:31" *)
  DFF _104_ (
    .C(_003_),
    .D(_001_[0]),
    .Q(paq_000[0])
  );
  (* src = "synth_mux2x1_8bits.v:31" *)
  DFF _105_ (
    .C(_004_),
    .D(_001_[1]),
    .Q(paq_000[1])
  );
  (* src = "synth_mux2x1_8bits.v:31" *)
  DFF _106_ (
    .C(_005_),
    .D(_001_[2]),
    .Q(paq_000[2])
  );
  (* src = "synth_mux2x1_8bits.v:31" *)
  DFF _107_ (
    .C(_006_),
    .D(_001_[3]),
    .Q(paq_000[3])
  );
  (* src = "synth_mux2x1_8bits.v:31" *)
  DFF _108_ (
    .C(_007_),
    .D(_001_[4]),
    .Q(paq_000[4])
  );
  (* src = "synth_mux2x1_8bits.v:31" *)
  DFF _109_ (
    .C(_008_),
    .D(_001_[5]),
    .Q(paq_000[5])
  );
  (* src = "synth_mux2x1_8bits.v:31" *)
  DFF _110_ (
    .C(_009_),
    .D(_001_[6]),
    .Q(paq_000[6])
  );
  (* src = "synth_mux2x1_8bits.v:31" *)
  DFF _111_ (
    .C(_010_),
    .D(_001_[7]),
    .Q(paq_000[7])
  );
  (* src = "synth_mux2x1_8bits.v:31" *)
  DFF _112_ (
    .C(_011_),
    .D(_001_[8]),
    .Q(paq_000[8])
  );
  (* src = "synth_mux2x1_8bits.v:23" *)
  DFF _113_ (
    .C(clk_4f),
    .D(reset),
    .Q(reset_s)
  );
  assign paq_0_x = { data_00_synt, valid_00_synt };
  assign paq_1_x = { data_11_synt, valid_11_synt };
endmodule

(* src = "synth_mux4x2_8bits.v:10" *)
module synth_mux4x2_8bits(data_00_synt, data_11_synt, valid_00_synt, valid_11_synt, data_0_synt, data_1_synt, data_2_synt, data_3_synt, valid_0_synt, valid_1_synt, valid_2_synt, valid_3_synt, clk_2f, clk_f, reset);
  (* src = "synth_mux4x2_8bits.v:47" *)
  wire [7:0] _000_;
  (* src = "synth_mux4x2_8bits.v:47" *)
  wire [7:0] _001_;
  (* src = "synth_mux4x2_8bits.v:36" *)
  wire [8:0] _002_;
  (* src = "synth_mux4x2_8bits.v:36" *)
  wire [8:0] _003_;
  (* src = "synth_mux4x2_8bits.v:47" *)
  wire _004_;
  (* src = "synth_mux4x2_8bits.v:47" *)
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  (* src = "synth_mux4x2_8bits.v:14" *)
  input clk_2f;
  (* src = "synth_mux4x2_8bits.v:14" *)
  input clk_f;
  (* src = "synth_mux4x2_8bits.v:12" *)
  input [7:0] data_0_synt;
  (* src = "synth_mux4x2_8bits.v:10" *)
  output [7:0] data_00_synt;
  (* src = "synth_mux4x2_8bits.v:12" *)
  input [7:0] data_1_synt;
  (* src = "synth_mux4x2_8bits.v:10" *)
  output [7:0] data_11_synt;
  (* src = "synth_mux4x2_8bits.v:12" *)
  input [7:0] data_2_synt;
  (* src = "synth_mux4x2_8bits.v:12" *)
  input [7:0] data_3_synt;
  (* src = "synth_mux4x2_8bits.v:20" *)
  wire [8:0] paq_00;
  (* src = "synth_mux4x2_8bits.v:16" *)
  wire [8:0] paq_0_x;
  (* src = "synth_mux4x2_8bits.v:20" *)
  wire [8:0] paq_11;
  (* src = "synth_mux4x2_8bits.v:17" *)
  wire [8:0] paq_1_x;
  (* src = "synth_mux4x2_8bits.v:18" *)
  wire [8:0] paq_2_x;
  (* src = "synth_mux4x2_8bits.v:19" *)
  wire [8:0] paq_3_x;
  (* src = "synth_mux4x2_8bits.v:14" *)
  input reset;
  (* src = "synth_mux4x2_8bits.v:21" *)
  wire reset_s;
  (* src = "synth_mux4x2_8bits.v:13" *)
  input valid_0_synt;
  (* src = "synth_mux4x2_8bits.v:11" *)
  output valid_00_synt;
  (* src = "synth_mux4x2_8bits.v:13" *)
  input valid_1_synt;
  (* src = "synth_mux4x2_8bits.v:11" *)
  output valid_11_synt;
  (* src = "synth_mux4x2_8bits.v:13" *)
  input valid_2_synt;
  (* src = "synth_mux4x2_8bits.v:13" *)
  input valid_3_synt;
  NOT _079_ (
    .A(clk_f),
    .Y(_024_)
  );
  NOT _080_ (
    .A(clk_2f),
    .Y(_006_)
  );
  NAND _081_ (
    .A(paq_00[2]),
    .B(reset_s),
    .Y(_025_)
  );
  NOT _082_ (
    .A(_025_),
    .Y(_000_[1])
  );
  NAND _083_ (
    .A(reset_s),
    .B(paq_00[3]),
    .Y(_026_)
  );
  NOT _084_ (
    .A(_026_),
    .Y(_000_[2])
  );
  NAND _085_ (
    .A(reset_s),
    .B(paq_00[4]),
    .Y(_027_)
  );
  NOT _086_ (
    .A(_027_),
    .Y(_000_[3])
  );
  NAND _087_ (
    .A(reset_s),
    .B(paq_00[5]),
    .Y(_028_)
  );
  NOT _088_ (
    .A(_028_),
    .Y(_000_[4])
  );
  NAND _089_ (
    .A(reset_s),
    .B(paq_00[6]),
    .Y(_029_)
  );
  NOT _090_ (
    .A(_029_),
    .Y(_000_[5])
  );
  NAND _091_ (
    .A(reset_s),
    .B(paq_00[7]),
    .Y(_030_)
  );
  NOT _092_ (
    .A(_030_),
    .Y(_000_[6])
  );
  NAND _093_ (
    .A(reset_s),
    .B(paq_00[8]),
    .Y(_031_)
  );
  NOT _094_ (
    .A(_031_),
    .Y(_000_[7])
  );
  NAND _095_ (
    .A(reset_s),
    .B(paq_11[1]),
    .Y(_032_)
  );
  NOT _096_ (
    .A(_032_),
    .Y(_001_[0])
  );
  NAND _097_ (
    .A(reset_s),
    .B(paq_11[2]),
    .Y(_033_)
  );
  NOT _098_ (
    .A(_033_),
    .Y(_001_[1])
  );
  NAND _099_ (
    .A(reset_s),
    .B(paq_11[3]),
    .Y(_034_)
  );
  NOT _100_ (
    .A(_034_),
    .Y(_001_[2])
  );
  NAND _101_ (
    .A(reset_s),
    .B(paq_11[4]),
    .Y(_035_)
  );
  NOT _102_ (
    .A(_035_),
    .Y(_001_[3])
  );
  NAND _103_ (
    .A(reset_s),
    .B(paq_11[5]),
    .Y(_036_)
  );
  NOT _104_ (
    .A(_036_),
    .Y(_001_[4])
  );
  NAND _105_ (
    .A(reset_s),
    .B(paq_11[6]),
    .Y(_037_)
  );
  NOT _106_ (
    .A(_037_),
    .Y(_001_[5])
  );
  NAND _107_ (
    .A(reset_s),
    .B(paq_11[7]),
    .Y(_038_)
  );
  NOT _108_ (
    .A(_038_),
    .Y(_001_[6])
  );
  NAND _109_ (
    .A(reset_s),
    .B(paq_11[8]),
    .Y(_039_)
  );
  NOT _110_ (
    .A(_039_),
    .Y(_001_[7])
  );
  NAND _111_ (
    .A(reset_s),
    .B(paq_00[0]),
    .Y(_040_)
  );
  NOT _112_ (
    .A(_040_),
    .Y(_004_)
  );
  NAND _113_ (
    .A(valid_0_synt),
    .B(clk_f),
    .Y(_041_)
  );
  NAND _114_ (
    .A(valid_1_synt),
    .B(_024_),
    .Y(_042_)
  );
  NAND _115_ (
    .A(_041_),
    .B(_042_),
    .Y(_002_[0])
  );
  NAND _116_ (
    .A(clk_f),
    .B(data_0_synt[0]),
    .Y(_043_)
  );
  NAND _117_ (
    .A(_024_),
    .B(data_1_synt[0]),
    .Y(_044_)
  );
  NAND _118_ (
    .A(_043_),
    .B(_044_),
    .Y(_002_[1])
  );
  NAND _119_ (
    .A(clk_f),
    .B(data_0_synt[1]),
    .Y(_045_)
  );
  NAND _120_ (
    .A(_024_),
    .B(data_1_synt[1]),
    .Y(_046_)
  );
  NAND _121_ (
    .A(_045_),
    .B(_046_),
    .Y(_002_[2])
  );
  NAND _122_ (
    .A(clk_f),
    .B(data_0_synt[2]),
    .Y(_047_)
  );
  NAND _123_ (
    .A(_024_),
    .B(data_1_synt[2]),
    .Y(_048_)
  );
  NAND _124_ (
    .A(_047_),
    .B(_048_),
    .Y(_002_[3])
  );
  NAND _125_ (
    .A(clk_f),
    .B(data_0_synt[3]),
    .Y(_049_)
  );
  NAND _126_ (
    .A(_024_),
    .B(data_1_synt[3]),
    .Y(_050_)
  );
  NAND _127_ (
    .A(_049_),
    .B(_050_),
    .Y(_002_[4])
  );
  NAND _128_ (
    .A(clk_f),
    .B(data_0_synt[4]),
    .Y(_051_)
  );
  NAND _129_ (
    .A(_024_),
    .B(data_1_synt[4]),
    .Y(_052_)
  );
  NAND _130_ (
    .A(_051_),
    .B(_052_),
    .Y(_002_[5])
  );
  NAND _131_ (
    .A(clk_f),
    .B(data_0_synt[5]),
    .Y(_053_)
  );
  NAND _132_ (
    .A(_024_),
    .B(data_1_synt[5]),
    .Y(_054_)
  );
  NAND _133_ (
    .A(_053_),
    .B(_054_),
    .Y(_002_[6])
  );
  NAND _134_ (
    .A(clk_f),
    .B(data_0_synt[6]),
    .Y(_055_)
  );
  NAND _135_ (
    .A(_024_),
    .B(data_1_synt[6]),
    .Y(_056_)
  );
  NAND _136_ (
    .A(_055_),
    .B(_056_),
    .Y(_002_[7])
  );
  NAND _137_ (
    .A(clk_f),
    .B(data_0_synt[7]),
    .Y(_057_)
  );
  NAND _138_ (
    .A(_024_),
    .B(data_1_synt[7]),
    .Y(_058_)
  );
  NAND _139_ (
    .A(_057_),
    .B(_058_),
    .Y(_002_[8])
  );
  NAND _140_ (
    .A(reset_s),
    .B(paq_11[0]),
    .Y(_059_)
  );
  NOT _141_ (
    .A(_059_),
    .Y(_005_)
  );
  NAND _142_ (
    .A(clk_f),
    .B(valid_2_synt),
    .Y(_060_)
  );
  NAND _143_ (
    .A(_024_),
    .B(valid_3_synt),
    .Y(_061_)
  );
  NAND _144_ (
    .A(_060_),
    .B(_061_),
    .Y(_003_[0])
  );
  NAND _145_ (
    .A(clk_f),
    .B(data_2_synt[0]),
    .Y(_062_)
  );
  NAND _146_ (
    .A(_024_),
    .B(data_3_synt[0]),
    .Y(_063_)
  );
  NAND _147_ (
    .A(_062_),
    .B(_063_),
    .Y(_003_[1])
  );
  NAND _148_ (
    .A(clk_f),
    .B(data_2_synt[1]),
    .Y(_064_)
  );
  NAND _149_ (
    .A(_024_),
    .B(data_3_synt[1]),
    .Y(_065_)
  );
  NAND _150_ (
    .A(_064_),
    .B(_065_),
    .Y(_003_[2])
  );
  NAND _151_ (
    .A(clk_f),
    .B(data_2_synt[2]),
    .Y(_066_)
  );
  NAND _152_ (
    .A(_024_),
    .B(data_3_synt[2]),
    .Y(_067_)
  );
  NAND _153_ (
    .A(_066_),
    .B(_067_),
    .Y(_003_[3])
  );
  NAND _154_ (
    .A(clk_f),
    .B(data_2_synt[3]),
    .Y(_068_)
  );
  NAND _155_ (
    .A(_024_),
    .B(data_3_synt[3]),
    .Y(_069_)
  );
  NAND _156_ (
    .A(_068_),
    .B(_069_),
    .Y(_003_[4])
  );
  NAND _157_ (
    .A(clk_f),
    .B(data_2_synt[4]),
    .Y(_070_)
  );
  NAND _158_ (
    .A(_024_),
    .B(data_3_synt[4]),
    .Y(_071_)
  );
  NAND _159_ (
    .A(_070_),
    .B(_071_),
    .Y(_003_[5])
  );
  NAND _160_ (
    .A(clk_f),
    .B(data_2_synt[5]),
    .Y(_072_)
  );
  NAND _161_ (
    .A(_024_),
    .B(data_3_synt[5]),
    .Y(_073_)
  );
  NAND _162_ (
    .A(_072_),
    .B(_073_),
    .Y(_003_[6])
  );
  NAND _163_ (
    .A(clk_f),
    .B(data_2_synt[6]),
    .Y(_074_)
  );
  NAND _164_ (
    .A(_024_),
    .B(data_3_synt[6]),
    .Y(_075_)
  );
  NAND _165_ (
    .A(_074_),
    .B(_075_),
    .Y(_003_[7])
  );
  NAND _166_ (
    .A(clk_f),
    .B(data_2_synt[7]),
    .Y(_076_)
  );
  NAND _167_ (
    .A(_024_),
    .B(data_3_synt[7]),
    .Y(_077_)
  );
  NAND _168_ (
    .A(_076_),
    .B(_077_),
    .Y(_003_[8])
  );
  NAND _169_ (
    .A(reset_s),
    .B(paq_00[1]),
    .Y(_078_)
  );
  NOT _170_ (
    .A(_078_),
    .Y(_000_[0])
  );
  NOT _171_ (
    .A(clk_2f),
    .Y(_007_)
  );
  NOT _172_ (
    .A(clk_2f),
    .Y(_008_)
  );
  NOT _173_ (
    .A(clk_2f),
    .Y(_009_)
  );
  NOT _174_ (
    .A(clk_2f),
    .Y(_010_)
  );
  NOT _175_ (
    .A(clk_2f),
    .Y(_011_)
  );
  NOT _176_ (
    .A(clk_2f),
    .Y(_012_)
  );
  NOT _177_ (
    .A(clk_2f),
    .Y(_013_)
  );
  NOT _178_ (
    .A(clk_2f),
    .Y(_014_)
  );
  NOT _179_ (
    .A(clk_2f),
    .Y(_015_)
  );
  NOT _180_ (
    .A(clk_2f),
    .Y(_016_)
  );
  NOT _181_ (
    .A(clk_2f),
    .Y(_017_)
  );
  NOT _182_ (
    .A(clk_2f),
    .Y(_018_)
  );
  NOT _183_ (
    .A(clk_2f),
    .Y(_019_)
  );
  NOT _184_ (
    .A(clk_2f),
    .Y(_020_)
  );
  NOT _185_ (
    .A(clk_2f),
    .Y(_021_)
  );
  NOT _186_ (
    .A(clk_2f),
    .Y(_022_)
  );
  NOT _187_ (
    .A(clk_2f),
    .Y(_023_)
  );
  (* src = "synth_mux4x2_8bits.v:47" *)
  DFF _188_ (
    .C(clk_2f),
    .D(_000_[0]),
    .Q(data_00_synt[0])
  );
  (* src = "synth_mux4x2_8bits.v:47" *)
  DFF _189_ (
    .C(clk_2f),
    .D(_000_[1]),
    .Q(data_00_synt[1])
  );
  (* src = "synth_mux4x2_8bits.v:47" *)
  DFF _190_ (
    .C(clk_2f),
    .D(_000_[2]),
    .Q(data_00_synt[2])
  );
  (* src = "synth_mux4x2_8bits.v:47" *)
  DFF _191_ (
    .C(clk_2f),
    .D(_000_[3]),
    .Q(data_00_synt[3])
  );
  (* src = "synth_mux4x2_8bits.v:47" *)
  DFF _192_ (
    .C(clk_2f),
    .D(_000_[4]),
    .Q(data_00_synt[4])
  );
  (* src = "synth_mux4x2_8bits.v:47" *)
  DFF _193_ (
    .C(clk_2f),
    .D(_000_[5]),
    .Q(data_00_synt[5])
  );
  (* src = "synth_mux4x2_8bits.v:47" *)
  DFF _194_ (
    .C(clk_2f),
    .D(_000_[6]),
    .Q(data_00_synt[6])
  );
  (* src = "synth_mux4x2_8bits.v:47" *)
  DFF _195_ (
    .C(clk_2f),
    .D(_000_[7]),
    .Q(data_00_synt[7])
  );
  (* src = "synth_mux4x2_8bits.v:47" *)
  DFF _196_ (
    .C(clk_2f),
    .D(_001_[0]),
    .Q(data_11_synt[0])
  );
  (* src = "synth_mux4x2_8bits.v:47" *)
  DFF _197_ (
    .C(clk_2f),
    .D(_001_[1]),
    .Q(data_11_synt[1])
  );
  (* src = "synth_mux4x2_8bits.v:47" *)
  DFF _198_ (
    .C(clk_2f),
    .D(_001_[2]),
    .Q(data_11_synt[2])
  );
  (* src = "synth_mux4x2_8bits.v:47" *)
  DFF _199_ (
    .C(clk_2f),
    .D(_001_[3]),
    .Q(data_11_synt[3])
  );
  (* src = "synth_mux4x2_8bits.v:47" *)
  DFF _200_ (
    .C(clk_2f),
    .D(_001_[4]),
    .Q(data_11_synt[4])
  );
  (* src = "synth_mux4x2_8bits.v:47" *)
  DFF _201_ (
    .C(clk_2f),
    .D(_001_[5]),
    .Q(data_11_synt[5])
  );
  (* src = "synth_mux4x2_8bits.v:47" *)
  DFF _202_ (
    .C(clk_2f),
    .D(_001_[6]),
    .Q(data_11_synt[6])
  );
  (* src = "synth_mux4x2_8bits.v:47" *)
  DFF _203_ (
    .C(clk_2f),
    .D(_001_[7]),
    .Q(data_11_synt[7])
  );
  (* src = "synth_mux4x2_8bits.v:47" *)
  DFF _204_ (
    .C(clk_2f),
    .D(_004_),
    .Q(valid_00_synt)
  );
  (* src = "synth_mux4x2_8bits.v:47" *)
  DFF _205_ (
    .C(clk_2f),
    .D(_005_),
    .Q(valid_11_synt)
  );
  (* src = "synth_mux4x2_8bits.v:36" *)
  DFF _206_ (
    .C(_006_),
    .D(_002_[0]),
    .Q(paq_00[0])
  );
  (* src = "synth_mux4x2_8bits.v:36" *)
  DFF _207_ (
    .C(_007_),
    .D(_002_[1]),
    .Q(paq_00[1])
  );
  (* src = "synth_mux4x2_8bits.v:36" *)
  DFF _208_ (
    .C(_008_),
    .D(_002_[2]),
    .Q(paq_00[2])
  );
  (* src = "synth_mux4x2_8bits.v:36" *)
  DFF _209_ (
    .C(_009_),
    .D(_002_[3]),
    .Q(paq_00[3])
  );
  (* src = "synth_mux4x2_8bits.v:36" *)
  DFF _210_ (
    .C(_010_),
    .D(_002_[4]),
    .Q(paq_00[4])
  );
  (* src = "synth_mux4x2_8bits.v:36" *)
  DFF _211_ (
    .C(_011_),
    .D(_002_[5]),
    .Q(paq_00[5])
  );
  (* src = "synth_mux4x2_8bits.v:36" *)
  DFF _212_ (
    .C(_012_),
    .D(_002_[6]),
    .Q(paq_00[6])
  );
  (* src = "synth_mux4x2_8bits.v:36" *)
  DFF _213_ (
    .C(_013_),
    .D(_002_[7]),
    .Q(paq_00[7])
  );
  (* src = "synth_mux4x2_8bits.v:36" *)
  DFF _214_ (
    .C(_014_),
    .D(_002_[8]),
    .Q(paq_00[8])
  );
  (* src = "synth_mux4x2_8bits.v:36" *)
  DFF _215_ (
    .C(_015_),
    .D(_003_[0]),
    .Q(paq_11[0])
  );
  (* src = "synth_mux4x2_8bits.v:36" *)
  DFF _216_ (
    .C(_016_),
    .D(_003_[1]),
    .Q(paq_11[1])
  );
  (* src = "synth_mux4x2_8bits.v:36" *)
  DFF _217_ (
    .C(_017_),
    .D(_003_[2]),
    .Q(paq_11[2])
  );
  (* src = "synth_mux4x2_8bits.v:36" *)
  DFF _218_ (
    .C(_018_),
    .D(_003_[3]),
    .Q(paq_11[3])
  );
  (* src = "synth_mux4x2_8bits.v:36" *)
  DFF _219_ (
    .C(_019_),
    .D(_003_[4]),
    .Q(paq_11[4])
  );
  (* src = "synth_mux4x2_8bits.v:36" *)
  DFF _220_ (
    .C(_020_),
    .D(_003_[5]),
    .Q(paq_11[5])
  );
  (* src = "synth_mux4x2_8bits.v:36" *)
  DFF _221_ (
    .C(_021_),
    .D(_003_[6]),
    .Q(paq_11[6])
  );
  (* src = "synth_mux4x2_8bits.v:36" *)
  DFF _222_ (
    .C(_022_),
    .D(_003_[7]),
    .Q(paq_11[7])
  );
  (* src = "synth_mux4x2_8bits.v:36" *)
  DFF _223_ (
    .C(_023_),
    .D(_003_[8]),
    .Q(paq_11[8])
  );
  (* src = "synth_mux4x2_8bits.v:25" *)
  DFF _224_ (
    .C(clk_2f),
    .D(reset),
    .Q(reset_s)
  );
  assign paq_0_x = { data_0_synt, valid_0_synt };
  assign paq_1_x = { data_1_synt, valid_1_synt };
  assign paq_2_x = { data_2_synt, valid_2_synt };
  assign paq_3_x = { data_3_synt, valid_3_synt };
endmodule

(* src = "synth_paralelo_serial1.v:1" *)
module synth_paralelo_serial1(data_out_synt, data_000_synt, clk_32f, clk_4f, valid_000_synt, reset);
  (* src = "synth_paralelo_serial1.v:14" *)
  wire [2:0] _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  wire _35_;
  wire _36_;
  wire _37_;
  wire _38_;
  wire _39_;
  wire _40_;
  wire _41_;
  wire _42_;
  wire _43_;
  (* src = "synth_paralelo_serial1.v:3" *)
  input clk_32f;
  (* src = "synth_paralelo_serial1.v:3" *)
  input clk_4f;
  (* src = "synth_paralelo_serial1.v:7" *)
  wire [2:0] counter;
  (* src = "synth_paralelo_serial1.v:2" *)
  input [7:0] data_000_synt;
  (* src = "synth_paralelo_serial1.v:1" *)
  output data_out_synt;
  (* src = "synth_paralelo_serial1.v:4" *)
  input reset;
  (* src = "synth_paralelo_serial1.v:8" *)
  wire reset_s;
  (* src = "synth_paralelo_serial1.v:4" *)
  input valid_000_synt;
  NOT _44_ (
    .A(reset_s),
    .Y(_01_)
  );
  NOT _45_ (
    .A(data_000_synt[0]),
    .Y(_02_)
  );
  NOT _46_ (
    .A(data_000_synt[1]),
    .Y(_03_)
  );
  NOT _47_ (
    .A(data_000_synt[4]),
    .Y(_04_)
  );
  NOT _48_ (
    .A(data_000_synt[5]),
    .Y(_05_)
  );
  NOT _49_ (
    .A(counter[2]),
    .Y(_06_)
  );
  NOT _50_ (
    .A(counter[1]),
    .Y(_07_)
  );
  NOT _51_ (
    .A(counter[0]),
    .Y(_08_)
  );
  NOR _52_ (
    .A(_01_),
    .B(counter[0]),
    .Y(_00_[0])
  );
  NAND _53_ (
    .A(counter[1]),
    .B(counter[0]),
    .Y(_09_)
  );
  NOT _54_ (
    .A(_09_),
    .Y(_10_)
  );
  NOR _55_ (
    .A(counter[1]),
    .B(counter[0]),
    .Y(_11_)
  );
  NOT _56_ (
    .A(_11_),
    .Y(_12_)
  );
  NAND _57_ (
    .A(reset_s),
    .B(_12_),
    .Y(_13_)
  );
  NOR _58_ (
    .A(_10_),
    .B(_13_),
    .Y(_00_[1])
  );
  NOR _59_ (
    .A(_06_),
    .B(_09_),
    .Y(_14_)
  );
  NAND _60_ (
    .A(_06_),
    .B(_09_),
    .Y(_15_)
  );
  NAND _61_ (
    .A(reset_s),
    .B(_15_),
    .Y(_16_)
  );
  NOR _62_ (
    .A(_14_),
    .B(_16_),
    .Y(_00_[2])
  );
  NAND _63_ (
    .A(reset_s),
    .B(valid_000_synt),
    .Y(_17_)
  );
  NOT _64_ (
    .A(_17_),
    .Y(_18_)
  );
  NOR _65_ (
    .A(_06_),
    .B(_17_),
    .Y(_19_)
  );
  NAND _66_ (
    .A(data_000_synt[6]),
    .B(_19_),
    .Y(_20_)
  );
  NOR _67_ (
    .A(data_000_synt[2]),
    .B(_17_),
    .Y(_21_)
  );
  NOR _68_ (
    .A(counter[2]),
    .B(_21_),
    .Y(_22_)
  );
  NOR _69_ (
    .A(counter[0]),
    .B(_22_),
    .Y(_23_)
  );
  NAND _70_ (
    .A(_20_),
    .B(_23_),
    .Y(_24_)
  );
  NOR _71_ (
    .A(data_000_synt[7]),
    .B(_06_),
    .Y(_25_)
  );
  NOR _72_ (
    .A(data_000_synt[3]),
    .B(counter[2]),
    .Y(_26_)
  );
  NOR _73_ (
    .A(_25_),
    .B(_26_),
    .Y(_27_)
  );
  NAND _74_ (
    .A(counter[0]),
    .B(_18_),
    .Y(_28_)
  );
  NOR _75_ (
    .A(_27_),
    .B(_28_),
    .Y(_29_)
  );
  NOR _76_ (
    .A(_07_),
    .B(_29_),
    .Y(_30_)
  );
  NAND _77_ (
    .A(_24_),
    .B(_30_),
    .Y(_31_)
  );
  NAND _78_ (
    .A(_05_),
    .B(_19_),
    .Y(_32_)
  );
  NOR _79_ (
    .A(_03_),
    .B(_17_),
    .Y(_33_)
  );
  NOR _80_ (
    .A(counter[2]),
    .B(_33_),
    .Y(_34_)
  );
  NOR _81_ (
    .A(counter[1]),
    .B(_08_),
    .Y(_35_)
  );
  NAND _82_ (
    .A(_32_),
    .B(_35_),
    .Y(_36_)
  );
  NOR _83_ (
    .A(_34_),
    .B(_36_),
    .Y(_37_)
  );
  NOR _84_ (
    .A(_02_),
    .B(_17_),
    .Y(_38_)
  );
  NOR _85_ (
    .A(counter[2]),
    .B(_38_),
    .Y(_39_)
  );
  NAND _86_ (
    .A(_04_),
    .B(_19_),
    .Y(_40_)
  );
  NAND _87_ (
    .A(_11_),
    .B(_40_),
    .Y(_41_)
  );
  NOR _88_ (
    .A(_39_),
    .B(_41_),
    .Y(_42_)
  );
  NOR _89_ (
    .A(_37_),
    .B(_42_),
    .Y(_43_)
  );
  NAND _90_ (
    .A(_31_),
    .B(_43_),
    .Y(data_out_synt)
  );
  (* src = "synth_paralelo_serial1.v:14" *)
  DFF _91_ (
    .C(clk_32f),
    .D(_00_[0]),
    .Q(counter[0])
  );
  (* src = "synth_paralelo_serial1.v:14" *)
  DFF _92_ (
    .C(clk_32f),
    .D(_00_[1]),
    .Q(counter[1])
  );
  (* src = "synth_paralelo_serial1.v:14" *)
  DFF _93_ (
    .C(clk_32f),
    .D(_00_[2]),
    .Q(counter[2])
  );
  (* src = "synth_paralelo_serial1.v:10" *)
  DFF _94_ (
    .C(clk_4f),
    .D(reset),
    .Q(reset_s)
  );
endmodule

(* src = "synth_paralelo_serial2.v:1" *)
module synth_paralelo_serial2(inserter_synt, clk_4f, clk_32f, reset, active_synt);
  (* src = "synth_paralelo_serial2.v:30" *)
  wire [2:0] _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  (* src = "synth_paralelo_serial2.v:5" *)
  (* unused_bits = "6 7" *)
  wire [7:0] IDLE_COM;
  (* src = "synth_paralelo_serial2.v:3" *)
  input active_synt;
  (* src = "synth_paralelo_serial2.v:2" *)
  input clk_32f;
  (* src = "synth_paralelo_serial2.v:2" *)
  input clk_4f;
  (* src = "synth_paralelo_serial2.v:6" *)
  wire [2:0] counter;
  (* src = "synth_paralelo_serial2.v:1" *)
  output inserter_synt;
  (* src = "synth_paralelo_serial2.v:3" *)
  input reset;
  (* src = "synth_paralelo_serial2.v:7" *)
  wire reset_s;
  NOT _20_ (
    .A(reset_s),
    .Y(_01_)
  );
  NOT _21_ (
    .A(counter[2]),
    .Y(_02_)
  );
  NAND _22_ (
    .A(counter[0]),
    .B(counter[1]),
    .Y(_03_)
  );
  NOT _23_ (
    .A(_03_),
    .Y(_04_)
  );
  NOR _24_ (
    .A(counter[0]),
    .B(counter[1]),
    .Y(_05_)
  );
  NOT _25_ (
    .A(_05_),
    .Y(_06_)
  );
  NAND _26_ (
    .A(reset_s),
    .B(_06_),
    .Y(_07_)
  );
  NOR _27_ (
    .A(_04_),
    .B(_07_),
    .Y(_00_[1])
  );
  NAND _28_ (
    .A(_02_),
    .B(_03_),
    .Y(_08_)
  );
  NAND _29_ (
    .A(reset_s),
    .B(_08_),
    .Y(_09_)
  );
  NAND _30_ (
    .A(counter[1]),
    .B(counter[2]),
    .Y(_10_)
  );
  NOR _31_ (
    .A(_02_),
    .B(_03_),
    .Y(_11_)
  );
  NOR _32_ (
    .A(_09_),
    .B(_11_),
    .Y(_00_[2])
  );
  NAND _33_ (
    .A(active_synt),
    .B(counter[0]),
    .Y(_12_)
  );
  NOT _34_ (
    .A(_12_),
    .Y(_13_)
  );
  NOR _35_ (
    .A(active_synt),
    .B(counter[0]),
    .Y(_14_)
  );
  NOR _36_ (
    .A(_13_),
    .B(_14_),
    .Y(_15_)
  );
  NOR _37_ (
    .A(_10_),
    .B(_15_),
    .Y(_16_)
  );
  NOR _38_ (
    .A(counter[1]),
    .B(counter[2]),
    .Y(_17_)
  );
  NOT _39_ (
    .A(_17_),
    .Y(_18_)
  );
  NAND _40_ (
    .A(reset_s),
    .B(_18_),
    .Y(_19_)
  );
  NOR _41_ (
    .A(_16_),
    .B(_19_),
    .Y(inserter_synt)
  );
  NOR _42_ (
    .A(_01_),
    .B(counter[0]),
    .Y(_00_[0])
  );
  (* src = "synth_paralelo_serial2.v:30" *)
  DFF _43_ (
    .C(clk_32f),
    .D(_00_[0]),
    .Q(counter[0])
  );
  (* src = "synth_paralelo_serial2.v:30" *)
  DFF _44_ (
    .C(clk_32f),
    .D(_00_[1]),
    .Q(counter[1])
  );
  (* src = "synth_paralelo_serial2.v:30" *)
  DFF _45_ (
    .C(clk_32f),
    .D(_00_[2]),
    .Q(counter[2])
  );
  (* src = "synth_paralelo_serial2.v:26" *)
  DFF _46_ (
    .C(clk_4f),
    .D(reset),
    .Q(reset_s)
  );
  assign IDLE_COM[5:0] = { reset_s, reset_s, reset_s, reset_s, 2'h0 };
endmodule

(* src = "synth_recirculacion.v:11" *)
module synth_recirculacion(data_0rf_synt, data_1rf_synt, data_2rf_synt, data_3rf_synt, valid_0rf_synt, valid_1rf_synt, valid_2rf_synt, valid_3rf_synt, data_0rp_synt, data_1rp_synt, data_2rp_synt, data_3rp_synt, valid_0rp_synt, valid_1rp_synt, valid_2rp_synt, valid_3rp_synt, data_0ps_synt, data_1ps_synt, data_2ps_synt, data_3ps_synt, valid_0ps_synt, valid_1ps_synt, valid_2ps_synt, valid_3ps_synt, IDLE_OUT_synt);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  (* src = "synth_recirculacion.v:21" *)
  input IDLE_OUT_synt;
  (* src = "synth_recirculacion.v:19" *)
  input [7:0] data_0ps_synt;
  (* src = "synth_recirculacion.v:11" *)
  output [7:0] data_0rf_synt;
  (* src = "synth_recirculacion.v:15" *)
  output [7:0] data_0rp_synt;
  (* src = "synth_recirculacion.v:19" *)
  input [7:0] data_1ps_synt;
  (* src = "synth_recirculacion.v:11" *)
  output [7:0] data_1rf_synt;
  (* src = "synth_recirculacion.v:15" *)
  output [7:0] data_1rp_synt;
  (* src = "synth_recirculacion.v:19" *)
  input [7:0] data_2ps_synt;
  (* src = "synth_recirculacion.v:12" *)
  output [7:0] data_2rf_synt;
  (* src = "synth_recirculacion.v:16" *)
  output [7:0] data_2rp_synt;
  (* src = "synth_recirculacion.v:19" *)
  input [7:0] data_3ps_synt;
  (* src = "synth_recirculacion.v:12" *)
  output [7:0] data_3rf_synt;
  (* src = "synth_recirculacion.v:16" *)
  output [7:0] data_3rp_synt;
  (* src = "synth_recirculacion.v:20" *)
  input valid_0ps_synt;
  (* src = "synth_recirculacion.v:13" *)
  output valid_0rf_synt;
  (* src = "synth_recirculacion.v:17" *)
  output valid_0rp_synt;
  (* src = "synth_recirculacion.v:20" *)
  input valid_1ps_synt;
  (* src = "synth_recirculacion.v:13" *)
  output valid_1rf_synt;
  (* src = "synth_recirculacion.v:17" *)
  output valid_1rp_synt;
  (* src = "synth_recirculacion.v:20" *)
  input valid_2ps_synt;
  (* src = "synth_recirculacion.v:14" *)
  output valid_2rf_synt;
  (* src = "synth_recirculacion.v:18" *)
  output valid_2rp_synt;
  (* src = "synth_recirculacion.v:20" *)
  input valid_3ps_synt;
  (* src = "synth_recirculacion.v:14" *)
  output valid_3rf_synt;
  (* src = "synth_recirculacion.v:18" *)
  output valid_3rp_synt;
  NOT _072_ (
    .A(valid_2ps_synt),
    .Y(_000_)
  );
  NOT _073_ (
    .A(valid_3ps_synt),
    .Y(_001_)
  );
  NOT _074_ (
    .A(data_3ps_synt[0]),
    .Y(_002_)
  );
  NOT _075_ (
    .A(data_3ps_synt[1]),
    .Y(_003_)
  );
  NOT _076_ (
    .A(data_3ps_synt[2]),
    .Y(_004_)
  );
  NOT _077_ (
    .A(data_3ps_synt[3]),
    .Y(_005_)
  );
  NOT _078_ (
    .A(data_3ps_synt[4]),
    .Y(_006_)
  );
  NOT _079_ (
    .A(data_3ps_synt[5]),
    .Y(_007_)
  );
  NOT _080_ (
    .A(data_3ps_synt[6]),
    .Y(_008_)
  );
  NOT _081_ (
    .A(data_3ps_synt[7]),
    .Y(_009_)
  );
  NOT _082_ (
    .A(data_1ps_synt[0]),
    .Y(_010_)
  );
  NOT _083_ (
    .A(data_1ps_synt[1]),
    .Y(_011_)
  );
  NOT _084_ (
    .A(data_1ps_synt[2]),
    .Y(_012_)
  );
  NOT _085_ (
    .A(data_1ps_synt[3]),
    .Y(_013_)
  );
  NOT _086_ (
    .A(data_1ps_synt[4]),
    .Y(_014_)
  );
  NOT _087_ (
    .A(data_1ps_synt[5]),
    .Y(_015_)
  );
  NOT _088_ (
    .A(data_1ps_synt[6]),
    .Y(_016_)
  );
  NOT _089_ (
    .A(data_1ps_synt[7]),
    .Y(_017_)
  );
  NOT _090_ (
    .A(data_2ps_synt[0]),
    .Y(_018_)
  );
  NOT _091_ (
    .A(data_2ps_synt[1]),
    .Y(_019_)
  );
  NOT _092_ (
    .A(data_2ps_synt[2]),
    .Y(_020_)
  );
  NOT _093_ (
    .A(data_2ps_synt[3]),
    .Y(_021_)
  );
  NOT _094_ (
    .A(data_2ps_synt[4]),
    .Y(_022_)
  );
  NOT _095_ (
    .A(data_2ps_synt[5]),
    .Y(_023_)
  );
  NOT _096_ (
    .A(data_2ps_synt[6]),
    .Y(_024_)
  );
  NOT _097_ (
    .A(data_2ps_synt[7]),
    .Y(_025_)
  );
  NOT _098_ (
    .A(valid_1ps_synt),
    .Y(_026_)
  );
  NOT _099_ (
    .A(valid_0ps_synt),
    .Y(_027_)
  );
  NOT _100_ (
    .A(data_0ps_synt[0]),
    .Y(_028_)
  );
  NOT _101_ (
    .A(data_0ps_synt[1]),
    .Y(_029_)
  );
  NOT _102_ (
    .A(data_0ps_synt[2]),
    .Y(_030_)
  );
  NOT _103_ (
    .A(data_0ps_synt[3]),
    .Y(_031_)
  );
  NOT _104_ (
    .A(data_0ps_synt[4]),
    .Y(_032_)
  );
  NOT _105_ (
    .A(data_0ps_synt[5]),
    .Y(_033_)
  );
  NOT _106_ (
    .A(data_0ps_synt[6]),
    .Y(_034_)
  );
  NOT _107_ (
    .A(data_0ps_synt[7]),
    .Y(_035_)
  );
  NOR _108_ (
    .A(_000_),
    .B(IDLE_OUT_synt),
    .Y(valid_2rp_synt)
  );
  NOR _109_ (
    .A(IDLE_OUT_synt),
    .B(_001_),
    .Y(valid_3rp_synt)
  );
  NOR _110_ (
    .A(IDLE_OUT_synt),
    .B(_002_),
    .Y(data_3rp_synt[0])
  );
  NOR _111_ (
    .A(IDLE_OUT_synt),
    .B(_003_),
    .Y(data_3rp_synt[1])
  );
  NOR _112_ (
    .A(IDLE_OUT_synt),
    .B(_004_),
    .Y(data_3rp_synt[2])
  );
  NOR _113_ (
    .A(IDLE_OUT_synt),
    .B(_005_),
    .Y(data_3rp_synt[3])
  );
  NOR _114_ (
    .A(IDLE_OUT_synt),
    .B(_006_),
    .Y(data_3rp_synt[4])
  );
  NOR _115_ (
    .A(IDLE_OUT_synt),
    .B(_007_),
    .Y(data_3rp_synt[5])
  );
  NOR _116_ (
    .A(IDLE_OUT_synt),
    .B(_008_),
    .Y(data_3rp_synt[6])
  );
  NOR _117_ (
    .A(IDLE_OUT_synt),
    .B(_009_),
    .Y(data_3rp_synt[7])
  );
  NOR _118_ (
    .A(IDLE_OUT_synt),
    .B(_010_),
    .Y(data_1rp_synt[0])
  );
  NOR _119_ (
    .A(IDLE_OUT_synt),
    .B(_011_),
    .Y(data_1rp_synt[1])
  );
  NOR _120_ (
    .A(IDLE_OUT_synt),
    .B(_012_),
    .Y(data_1rp_synt[2])
  );
  NOR _121_ (
    .A(IDLE_OUT_synt),
    .B(_013_),
    .Y(data_1rp_synt[3])
  );
  NOR _122_ (
    .A(IDLE_OUT_synt),
    .B(_014_),
    .Y(data_1rp_synt[4])
  );
  NOR _123_ (
    .A(IDLE_OUT_synt),
    .B(_015_),
    .Y(data_1rp_synt[5])
  );
  NOR _124_ (
    .A(IDLE_OUT_synt),
    .B(_016_),
    .Y(data_1rp_synt[6])
  );
  NOR _125_ (
    .A(IDLE_OUT_synt),
    .B(_017_),
    .Y(data_1rp_synt[7])
  );
  NOR _126_ (
    .A(IDLE_OUT_synt),
    .B(_018_),
    .Y(data_2rp_synt[0])
  );
  NOR _127_ (
    .A(IDLE_OUT_synt),
    .B(_019_),
    .Y(data_2rp_synt[1])
  );
  NOR _128_ (
    .A(IDLE_OUT_synt),
    .B(_020_),
    .Y(data_2rp_synt[2])
  );
  NOR _129_ (
    .A(IDLE_OUT_synt),
    .B(_021_),
    .Y(data_2rp_synt[3])
  );
  NOR _130_ (
    .A(IDLE_OUT_synt),
    .B(_022_),
    .Y(data_2rp_synt[4])
  );
  NOR _131_ (
    .A(IDLE_OUT_synt),
    .B(_023_),
    .Y(data_2rp_synt[5])
  );
  NOR _132_ (
    .A(IDLE_OUT_synt),
    .B(_024_),
    .Y(data_2rp_synt[6])
  );
  NOR _133_ (
    .A(IDLE_OUT_synt),
    .B(_025_),
    .Y(data_2rp_synt[7])
  );
  NOR _134_ (
    .A(IDLE_OUT_synt),
    .B(_026_),
    .Y(valid_1rp_synt)
  );
  NAND _135_ (
    .A(IDLE_OUT_synt),
    .B(valid_3ps_synt),
    .Y(_036_)
  );
  NOT _136_ (
    .A(_036_),
    .Y(valid_3rf_synt)
  );
  NOR _137_ (
    .A(IDLE_OUT_synt),
    .B(_027_),
    .Y(valid_0rp_synt)
  );
  NOR _138_ (
    .A(IDLE_OUT_synt),
    .B(_028_),
    .Y(data_0rp_synt[0])
  );
  NOR _139_ (
    .A(IDLE_OUT_synt),
    .B(_029_),
    .Y(data_0rp_synt[1])
  );
  NOR _140_ (
    .A(IDLE_OUT_synt),
    .B(_030_),
    .Y(data_0rp_synt[2])
  );
  NOR _141_ (
    .A(IDLE_OUT_synt),
    .B(_031_),
    .Y(data_0rp_synt[3])
  );
  NOR _142_ (
    .A(IDLE_OUT_synt),
    .B(_032_),
    .Y(data_0rp_synt[4])
  );
  NOR _143_ (
    .A(IDLE_OUT_synt),
    .B(_033_),
    .Y(data_0rp_synt[5])
  );
  NOR _144_ (
    .A(IDLE_OUT_synt),
    .B(_034_),
    .Y(data_0rp_synt[6])
  );
  NOR _145_ (
    .A(IDLE_OUT_synt),
    .B(_035_),
    .Y(data_0rp_synt[7])
  );
  NAND _146_ (
    .A(IDLE_OUT_synt),
    .B(data_2ps_synt[0]),
    .Y(_037_)
  );
  NOT _147_ (
    .A(_037_),
    .Y(data_2rf_synt[0])
  );
  NAND _148_ (
    .A(IDLE_OUT_synt),
    .B(data_2ps_synt[1]),
    .Y(_038_)
  );
  NOT _149_ (
    .A(_038_),
    .Y(data_2rf_synt[1])
  );
  NAND _150_ (
    .A(IDLE_OUT_synt),
    .B(data_2ps_synt[2]),
    .Y(_039_)
  );
  NOT _151_ (
    .A(_039_),
    .Y(data_2rf_synt[2])
  );
  NAND _152_ (
    .A(IDLE_OUT_synt),
    .B(data_2ps_synt[3]),
    .Y(_040_)
  );
  NOT _153_ (
    .A(_040_),
    .Y(data_2rf_synt[3])
  );
  NAND _154_ (
    .A(IDLE_OUT_synt),
    .B(data_2ps_synt[4]),
    .Y(_041_)
  );
  NOT _155_ (
    .A(_041_),
    .Y(data_2rf_synt[4])
  );
  NAND _156_ (
    .A(IDLE_OUT_synt),
    .B(data_2ps_synt[5]),
    .Y(_042_)
  );
  NOT _157_ (
    .A(_042_),
    .Y(data_2rf_synt[5])
  );
  NAND _158_ (
    .A(IDLE_OUT_synt),
    .B(data_2ps_synt[6]),
    .Y(_043_)
  );
  NOT _159_ (
    .A(_043_),
    .Y(data_2rf_synt[6])
  );
  NAND _160_ (
    .A(IDLE_OUT_synt),
    .B(data_2ps_synt[7]),
    .Y(_044_)
  );
  NOT _161_ (
    .A(_044_),
    .Y(data_2rf_synt[7])
  );
  NAND _162_ (
    .A(IDLE_OUT_synt),
    .B(data_3ps_synt[0]),
    .Y(_045_)
  );
  NOT _163_ (
    .A(_045_),
    .Y(data_3rf_synt[0])
  );
  NAND _164_ (
    .A(IDLE_OUT_synt),
    .B(data_3ps_synt[1]),
    .Y(_046_)
  );
  NOT _165_ (
    .A(_046_),
    .Y(data_3rf_synt[1])
  );
  NAND _166_ (
    .A(IDLE_OUT_synt),
    .B(data_3ps_synt[2]),
    .Y(_047_)
  );
  NOT _167_ (
    .A(_047_),
    .Y(data_3rf_synt[2])
  );
  NAND _168_ (
    .A(IDLE_OUT_synt),
    .B(data_3ps_synt[3]),
    .Y(_048_)
  );
  NOT _169_ (
    .A(_048_),
    .Y(data_3rf_synt[3])
  );
  NAND _170_ (
    .A(IDLE_OUT_synt),
    .B(data_3ps_synt[4]),
    .Y(_049_)
  );
  NOT _171_ (
    .A(_049_),
    .Y(data_3rf_synt[4])
  );
  NAND _172_ (
    .A(IDLE_OUT_synt),
    .B(data_3ps_synt[5]),
    .Y(_050_)
  );
  NOT _173_ (
    .A(_050_),
    .Y(data_3rf_synt[5])
  );
  NAND _174_ (
    .A(IDLE_OUT_synt),
    .B(data_3ps_synt[6]),
    .Y(_051_)
  );
  NOT _175_ (
    .A(_051_),
    .Y(data_3rf_synt[6])
  );
  NAND _176_ (
    .A(IDLE_OUT_synt),
    .B(data_3ps_synt[7]),
    .Y(_052_)
  );
  NOT _177_ (
    .A(_052_),
    .Y(data_3rf_synt[7])
  );
  NAND _178_ (
    .A(valid_2ps_synt),
    .B(IDLE_OUT_synt),
    .Y(_053_)
  );
  NOT _179_ (
    .A(_053_),
    .Y(valid_2rf_synt)
  );
  NAND _180_ (
    .A(IDLE_OUT_synt),
    .B(valid_0ps_synt),
    .Y(_054_)
  );
  NOT _181_ (
    .A(_054_),
    .Y(valid_0rf_synt)
  );
  NAND _182_ (
    .A(IDLE_OUT_synt),
    .B(valid_1ps_synt),
    .Y(_055_)
  );
  NOT _183_ (
    .A(_055_),
    .Y(valid_1rf_synt)
  );
  NAND _184_ (
    .A(IDLE_OUT_synt),
    .B(data_1ps_synt[0]),
    .Y(_056_)
  );
  NOT _185_ (
    .A(_056_),
    .Y(data_1rf_synt[0])
  );
  NAND _186_ (
    .A(IDLE_OUT_synt),
    .B(data_1ps_synt[1]),
    .Y(_057_)
  );
  NOT _187_ (
    .A(_057_),
    .Y(data_1rf_synt[1])
  );
  NAND _188_ (
    .A(IDLE_OUT_synt),
    .B(data_1ps_synt[2]),
    .Y(_058_)
  );
  NOT _189_ (
    .A(_058_),
    .Y(data_1rf_synt[2])
  );
  NAND _190_ (
    .A(IDLE_OUT_synt),
    .B(data_1ps_synt[3]),
    .Y(_059_)
  );
  NOT _191_ (
    .A(_059_),
    .Y(data_1rf_synt[3])
  );
  NAND _192_ (
    .A(IDLE_OUT_synt),
    .B(data_1ps_synt[4]),
    .Y(_060_)
  );
  NOT _193_ (
    .A(_060_),
    .Y(data_1rf_synt[4])
  );
  NAND _194_ (
    .A(IDLE_OUT_synt),
    .B(data_1ps_synt[5]),
    .Y(_061_)
  );
  NOT _195_ (
    .A(_061_),
    .Y(data_1rf_synt[5])
  );
  NAND _196_ (
    .A(IDLE_OUT_synt),
    .B(data_1ps_synt[6]),
    .Y(_062_)
  );
  NOT _197_ (
    .A(_062_),
    .Y(data_1rf_synt[6])
  );
  NAND _198_ (
    .A(IDLE_OUT_synt),
    .B(data_1ps_synt[7]),
    .Y(_063_)
  );
  NOT _199_ (
    .A(_063_),
    .Y(data_1rf_synt[7])
  );
  NAND _200_ (
    .A(IDLE_OUT_synt),
    .B(data_0ps_synt[0]),
    .Y(_064_)
  );
  NOT _201_ (
    .A(_064_),
    .Y(data_0rf_synt[0])
  );
  NAND _202_ (
    .A(IDLE_OUT_synt),
    .B(data_0ps_synt[1]),
    .Y(_065_)
  );
  NOT _203_ (
    .A(_065_),
    .Y(data_0rf_synt[1])
  );
  NAND _204_ (
    .A(IDLE_OUT_synt),
    .B(data_0ps_synt[2]),
    .Y(_066_)
  );
  NOT _205_ (
    .A(_066_),
    .Y(data_0rf_synt[2])
  );
  NAND _206_ (
    .A(IDLE_OUT_synt),
    .B(data_0ps_synt[3]),
    .Y(_067_)
  );
  NOT _207_ (
    .A(_067_),
    .Y(data_0rf_synt[3])
  );
  NAND _208_ (
    .A(IDLE_OUT_synt),
    .B(data_0ps_synt[4]),
    .Y(_068_)
  );
  NOT _209_ (
    .A(_068_),
    .Y(data_0rf_synt[4])
  );
  NAND _210_ (
    .A(IDLE_OUT_synt),
    .B(data_0ps_synt[5]),
    .Y(_069_)
  );
  NOT _211_ (
    .A(_069_),
    .Y(data_0rf_synt[5])
  );
  NAND _212_ (
    .A(IDLE_OUT_synt),
    .B(data_0ps_synt[6]),
    .Y(_070_)
  );
  NOT _213_ (
    .A(_070_),
    .Y(data_0rf_synt[6])
  );
  NAND _214_ (
    .A(IDLE_OUT_synt),
    .B(data_0ps_synt[7]),
    .Y(_071_)
  );
  NOT _215_ (
    .A(_071_),
    .Y(data_0rf_synt[7])
  );
endmodule

(* src = "synth_serial_paralelo1.v:1" *)
module synth_serial_paralelo1(data_rx000_synt, valid_rx000_synt, active_synt, data_out_synt, reset, clk_4f, clk_32f);
  (* src = "synth_serial_paralelo1.v:40" *)
  wire [2:0] _000_;
  (* src = "synth_serial_paralelo1.v:30" *)
  wire [7:0] _001_;
  (* src = "synth_serial_paralelo1.v:19" *)
  wire [2:0] _002_;
  (* src = "synth_serial_paralelo1.v:65" *)
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  (* src = "synth_serial_paralelo1.v:9" *)
  wire [2:0] BC_counter;
  (* src = "synth_serial_paralelo1.v:2" *)
  output active_synt;
  (* src = "synth_serial_paralelo1.v:4" *)
  input clk_32f;
  (* src = "synth_serial_paralelo1.v:4" *)
  input clk_4f;
  (* src = "synth_serial_paralelo1.v:8" *)
  wire [7:0] container;
  (* src = "synth_serial_paralelo1.v:7" *)
  wire [2:0] counter;
  (* src = "synth_serial_paralelo1.v:3" *)
  input data_out_synt;
  (* src = "synth_serial_paralelo1.v:1" *)
  output [7:0] data_rx000_synt;
  (* src = "synth_serial_paralelo1.v:3" *)
  input reset;
  (* src = "synth_serial_paralelo1.v:6" *)
  wire reset_s;
  (* src = "synth_serial_paralelo1.v:2" *)
  output valid_rx000_synt;
  NOT _080_ (
    .A(counter[2]),
    .Y(_034_)
  );
  NOT _081_ (
    .A(counter[0]),
    .Y(_035_)
  );
  NOT _082_ (
    .A(BC_counter[1]),
    .Y(_036_)
  );
  NOT _083_ (
    .A(container[0]),
    .Y(_037_)
  );
  NOT _084_ (
    .A(container[1]),
    .Y(_038_)
  );
  NOT _085_ (
    .A(data_out_synt),
    .Y(_039_)
  );
  NOT _086_ (
    .A(reset_s),
    .Y(_040_)
  );
  NOT _087_ (
    .A(container[3]),
    .Y(_041_)
  );
  NOT _088_ (
    .A(container[2]),
    .Y(_042_)
  );
  NOT _089_ (
    .A(BC_counter[2]),
    .Y(_043_)
  );
  NOT _090_ (
    .A(container[7]),
    .Y(_044_)
  );
  NOT _091_ (
    .A(clk_32f),
    .Y(_004_)
  );
  NAND _092_ (
    .A(_036_),
    .B(BC_counter[2]),
    .Y(_045_)
  );
  NOR _093_ (
    .A(BC_counter[0]),
    .B(_045_),
    .Y(active_synt)
  );
  NOR _094_ (
    .A(counter[0]),
    .B(counter[1]),
    .Y(_046_)
  );
  NAND _095_ (
    .A(counter[2]),
    .B(_046_),
    .Y(_047_)
  );
  NOR _096_ (
    .A(_039_),
    .B(_047_),
    .Y(_048_)
  );
  NAND _097_ (
    .A(container[4]),
    .B(_047_),
    .Y(_049_)
  );
  NOR _098_ (
    .A(_040_),
    .B(_048_),
    .Y(_050_)
  );
  NAND _099_ (
    .A(_049_),
    .B(_050_),
    .Y(_001_[4])
  );
  NAND _100_ (
    .A(counter[0]),
    .B(counter[1]),
    .Y(_051_)
  );
  NOR _101_ (
    .A(counter[2]),
    .B(_051_),
    .Y(_052_)
  );
  NAND _102_ (
    .A(data_out_synt),
    .B(_052_),
    .Y(_053_)
  );
  NOR _103_ (
    .A(_041_),
    .B(_052_),
    .Y(_054_)
  );
  NOR _104_ (
    .A(_040_),
    .B(_054_),
    .Y(_055_)
  );
  NAND _105_ (
    .A(_053_),
    .B(_055_),
    .Y(_001_[3])
  );
  NAND _106_ (
    .A(_035_),
    .B(counter[1]),
    .Y(_056_)
  );
  NOR _107_ (
    .A(counter[2]),
    .B(_056_),
    .Y(_057_)
  );
  NAND _108_ (
    .A(data_out_synt),
    .B(_057_),
    .Y(_058_)
  );
  NOR _109_ (
    .A(_042_),
    .B(_057_),
    .Y(_059_)
  );
  NOR _110_ (
    .A(_040_),
    .B(_059_),
    .Y(_060_)
  );
  NAND _111_ (
    .A(_058_),
    .B(_060_),
    .Y(_001_[2])
  );
  NOR _112_ (
    .A(_035_),
    .B(counter[1]),
    .Y(_061_)
  );
  NAND _113_ (
    .A(_034_),
    .B(_061_),
    .Y(_062_)
  );
  NAND _114_ (
    .A(_038_),
    .B(_062_),
    .Y(_063_)
  );
  NOR _115_ (
    .A(data_out_synt),
    .B(_062_),
    .Y(_064_)
  );
  NAND _116_ (
    .A(reset_s),
    .B(_063_),
    .Y(_065_)
  );
  NOR _117_ (
    .A(_064_),
    .B(_065_),
    .Y(_001_[1])
  );
  NAND _118_ (
    .A(_034_),
    .B(_046_),
    .Y(_066_)
  );
  NAND _119_ (
    .A(_037_),
    .B(_066_),
    .Y(_067_)
  );
  NOR _120_ (
    .A(data_out_synt),
    .B(_066_),
    .Y(_068_)
  );
  NAND _121_ (
    .A(reset_s),
    .B(_067_),
    .Y(_069_)
  );
  NOR _122_ (
    .A(_068_),
    .B(_069_),
    .Y(_001_[0])
  );
  NOR _123_ (
    .A(_034_),
    .B(_056_),
    .Y(_070_)
  );
  NOR _124_ (
    .A(container[6]),
    .B(_070_),
    .Y(_071_)
  );
  NAND _125_ (
    .A(_039_),
    .B(_070_),
    .Y(_072_)
  );
  NAND _126_ (
    .A(reset_s),
    .B(_072_),
    .Y(_073_)
  );
  NOR _127_ (
    .A(_071_),
    .B(_073_),
    .Y(_001_[6])
  );
  NOR _128_ (
    .A(counter[0]),
    .B(_040_),
    .Y(_002_[0])
  );
  NAND _129_ (
    .A(reset_s),
    .B(_051_),
    .Y(_074_)
  );
  NOR _130_ (
    .A(_046_),
    .B(_074_),
    .Y(_002_[1])
  );
  NOR _131_ (
    .A(_034_),
    .B(_051_),
    .Y(_075_)
  );
  NAND _132_ (
    .A(_034_),
    .B(_051_),
    .Y(_076_)
  );
  NAND _133_ (
    .A(reset_s),
    .B(_076_),
    .Y(_077_)
  );
  NOR _134_ (
    .A(_075_),
    .B(_077_),
    .Y(_002_[2])
  );
  NAND _135_ (
    .A(container[3]),
    .B(container[2]),
    .Y(_078_)
  );
  NAND _136_ (
    .A(container[7]),
    .B(container[5]),
    .Y(_079_)
  );
  NOR _137_ (
    .A(_078_),
    .B(_079_),
    .Y(_012_)
  );
  NOR _138_ (
    .A(container[1]),
    .B(container[6]),
    .Y(_013_)
  );
  NOT _139_ (
    .A(_013_),
    .Y(_014_)
  );
  NAND _140_ (
    .A(_037_),
    .B(container[4]),
    .Y(_015_)
  );
  NOR _141_ (
    .A(_014_),
    .B(_015_),
    .Y(_016_)
  );
  NAND _142_ (
    .A(_012_),
    .B(_016_),
    .Y(_017_)
  );
  NAND _143_ (
    .A(reset),
    .B(_017_),
    .Y(_018_)
  );
  NOR _144_ (
    .A(_043_),
    .B(_018_),
    .Y(_003_)
  );
  NOR _145_ (
    .A(BC_counter[2]),
    .B(_017_),
    .Y(_019_)
  );
  NAND _146_ (
    .A(BC_counter[0]),
    .B(_019_),
    .Y(_020_)
  );
  NOR _147_ (
    .A(BC_counter[0]),
    .B(_019_),
    .Y(_021_)
  );
  NAND _148_ (
    .A(reset_s),
    .B(_020_),
    .Y(_022_)
  );
  NOR _149_ (
    .A(_021_),
    .B(_022_),
    .Y(_000_[0])
  );
  NAND _150_ (
    .A(_036_),
    .B(_020_),
    .Y(_023_)
  );
  NAND _151_ (
    .A(reset_s),
    .B(_023_),
    .Y(_024_)
  );
  NOR _152_ (
    .A(_036_),
    .B(_020_),
    .Y(_025_)
  );
  NOR _153_ (
    .A(_024_),
    .B(_025_),
    .Y(_000_[1])
  );
  NOR _154_ (
    .A(BC_counter[2]),
    .B(_025_),
    .Y(_026_)
  );
  NOR _155_ (
    .A(_040_),
    .B(_026_),
    .Y(_000_[2])
  );
  NAND _156_ (
    .A(data_out_synt),
    .B(_075_),
    .Y(_027_)
  );
  NOR _157_ (
    .A(_044_),
    .B(_075_),
    .Y(_028_)
  );
  NOR _158_ (
    .A(_040_),
    .B(_028_),
    .Y(_029_)
  );
  NAND _159_ (
    .A(_027_),
    .B(_029_),
    .Y(_001_[7])
  );
  NAND _160_ (
    .A(counter[2]),
    .B(_061_),
    .Y(_030_)
  );
  NOR _161_ (
    .A(_039_),
    .B(_030_),
    .Y(_031_)
  );
  NAND _162_ (
    .A(container[5]),
    .B(_030_),
    .Y(_032_)
  );
  NOR _163_ (
    .A(_040_),
    .B(_031_),
    .Y(_033_)
  );
  NAND _164_ (
    .A(_032_),
    .B(_033_),
    .Y(_001_[5])
  );
  NOT _165_ (
    .A(clk_32f),
    .Y(_005_)
  );
  NOT _166_ (
    .A(clk_32f),
    .Y(_006_)
  );
  NOT _167_ (
    .A(clk_32f),
    .Y(_007_)
  );
  NOT _168_ (
    .A(clk_32f),
    .Y(_008_)
  );
  NOT _169_ (
    .A(clk_32f),
    .Y(_009_)
  );
  NOT _170_ (
    .A(clk_32f),
    .Y(_010_)
  );
  NOT _171_ (
    .A(clk_32f),
    .Y(_011_)
  );
  (* src = "synth_serial_paralelo1.v:84" *)
  DFF _172_ (
    .C(clk_4f),
    .D(container[0]),
    .Q(data_rx000_synt[0])
  );
  (* src = "synth_serial_paralelo1.v:84" *)
  DFF _173_ (
    .C(clk_4f),
    .D(container[1]),
    .Q(data_rx000_synt[1])
  );
  (* src = "synth_serial_paralelo1.v:84" *)
  DFF _174_ (
    .C(clk_4f),
    .D(container[2]),
    .Q(data_rx000_synt[2])
  );
  (* src = "synth_serial_paralelo1.v:84" *)
  DFF _175_ (
    .C(clk_4f),
    .D(container[3]),
    .Q(data_rx000_synt[3])
  );
  (* src = "synth_serial_paralelo1.v:84" *)
  DFF _176_ (
    .C(clk_4f),
    .D(container[4]),
    .Q(data_rx000_synt[4])
  );
  (* src = "synth_serial_paralelo1.v:84" *)
  DFF _177_ (
    .C(clk_4f),
    .D(container[5]),
    .Q(data_rx000_synt[5])
  );
  (* src = "synth_serial_paralelo1.v:84" *)
  DFF _178_ (
    .C(clk_4f),
    .D(container[6]),
    .Q(data_rx000_synt[6])
  );
  (* src = "synth_serial_paralelo1.v:84" *)
  DFF _179_ (
    .C(clk_4f),
    .D(container[7]),
    .Q(data_rx000_synt[7])
  );
  (* src = "synth_serial_paralelo1.v:65" *)
  DFF _180_ (
    .C(clk_4f),
    .D(_003_),
    .Q(valid_rx000_synt)
  );
  (* src = "synth_serial_paralelo1.v:40" *)
  DFF _181_ (
    .C(clk_4f),
    .D(_000_[0]),
    .Q(BC_counter[0])
  );
  (* src = "synth_serial_paralelo1.v:40" *)
  DFF _182_ (
    .C(clk_4f),
    .D(_000_[1]),
    .Q(BC_counter[1])
  );
  (* src = "synth_serial_paralelo1.v:40" *)
  DFF _183_ (
    .C(clk_4f),
    .D(_000_[2]),
    .Q(BC_counter[2])
  );
  (* src = "synth_serial_paralelo1.v:30" *)
  DFF _184_ (
    .C(_004_),
    .D(_001_[0]),
    .Q(container[0])
  );
  (* src = "synth_serial_paralelo1.v:30" *)
  DFF _185_ (
    .C(_005_),
    .D(_001_[1]),
    .Q(container[1])
  );
  (* src = "synth_serial_paralelo1.v:30" *)
  DFF _186_ (
    .C(_006_),
    .D(_001_[2]),
    .Q(container[2])
  );
  (* src = "synth_serial_paralelo1.v:30" *)
  DFF _187_ (
    .C(_007_),
    .D(_001_[3]),
    .Q(container[3])
  );
  (* src = "synth_serial_paralelo1.v:30" *)
  DFF _188_ (
    .C(_008_),
    .D(_001_[4]),
    .Q(container[4])
  );
  (* src = "synth_serial_paralelo1.v:30" *)
  DFF _189_ (
    .C(_009_),
    .D(_001_[5]),
    .Q(container[5])
  );
  (* src = "synth_serial_paralelo1.v:30" *)
  DFF _190_ (
    .C(_010_),
    .D(_001_[6]),
    .Q(container[6])
  );
  (* src = "synth_serial_paralelo1.v:30" *)
  DFF _191_ (
    .C(_011_),
    .D(_001_[7]),
    .Q(container[7])
  );
  (* src = "synth_serial_paralelo1.v:19" *)
  DFF _192_ (
    .C(clk_32f),
    .D(_002_[0]),
    .Q(counter[0])
  );
  (* src = "synth_serial_paralelo1.v:19" *)
  DFF _193_ (
    .C(clk_32f),
    .D(_002_[1]),
    .Q(counter[1])
  );
  (* src = "synth_serial_paralelo1.v:19" *)
  DFF _194_ (
    .C(clk_32f),
    .D(_002_[2]),
    .Q(counter[2])
  );
  (* src = "synth_serial_paralelo1.v:13" *)
  DFF _195_ (
    .C(clk_4f),
    .D(reset),
    .Q(reset_s)
  );
endmodule

(* src = "synth_serial_paralelo2.v:1" *)
module synth_serial_paralelo2(IDLE_OUT_synt, clk_f, clk_4f, clk_32f, reset, inserter_synt);
  (* src = "synth_serial_paralelo2.v:34" *)
  wire [2:0] _000_;
  (* src = "synth_serial_paralelo2.v:29" *)
  wire [7:0] _001_;
  (* src = "synth_serial_paralelo2.v:20" *)
  wire [2:0] _002_;
  (* src = "synth_serial_paralelo2.v:49" *)
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  (* src = "synth_serial_paralelo2.v:12" *)
  wire [2:0] BC_counter;
  (* src = "synth_serial_paralelo2.v:1" *)
  output IDLE_OUT_synt;
  (* src = "synth_serial_paralelo2.v:10" *)
  wire IDLE_OUT_synt_N;
  (* src = "synth_serial_paralelo2.v:2" *)
  input clk_32f;
  (* src = "synth_serial_paralelo2.v:2" *)
  input clk_4f;
  (* src = "synth_serial_paralelo2.v:2" *)
  input clk_f;
  (* src = "synth_serial_paralelo2.v:13" *)
  wire [7:0] container;
  (* src = "synth_serial_paralelo2.v:12" *)
  wire [2:0] counter;
  (* src = "synth_serial_paralelo2.v:11" *)
  wire idle_in;
  (* src = "synth_serial_paralelo2.v:3" *)
  input inserter_synt;
  (* src = "synth_serial_paralelo2.v:3" *)
  input reset;
  (* src = "synth_serial_paralelo2.v:10" *)
  wire reset_s;
  NOT _090_ (
    .A(counter[2]),
    .Y(_040_)
  );
  NOT _091_ (
    .A(counter[0]),
    .Y(_041_)
  );
  NOT _092_ (
    .A(counter[1]),
    .Y(_042_)
  );
  NOT _093_ (
    .A(BC_counter[2]),
    .Y(_043_)
  );
  NOT _094_ (
    .A(reset_s),
    .Y(_044_)
  );
  NOT _095_ (
    .A(BC_counter[0]),
    .Y(_045_)
  );
  NOT _096_ (
    .A(BC_counter[1]),
    .Y(_046_)
  );
  NOT _097_ (
    .A(clk_32f),
    .Y(_004_)
  );
  NOR _098_ (
    .A(container[0]),
    .B(container[1]),
    .Y(_047_)
  );
  NAND _099_ (
    .A(container[5]),
    .B(container[4]),
    .Y(_048_)
  );
  NAND _100_ (
    .A(container[3]),
    .B(container[2]),
    .Y(_049_)
  );
  NOR _101_ (
    .A(_048_),
    .B(_049_),
    .Y(_050_)
  );
  NAND _102_ (
    .A(container[4]),
    .B(container[3]),
    .Y(_051_)
  );
  NAND _103_ (
    .A(container[5]),
    .B(container[2]),
    .Y(_052_)
  );
  NOT _104_ (
    .A(_052_),
    .Y(_053_)
  );
  NAND _105_ (
    .A(_047_),
    .B(_053_),
    .Y(_054_)
  );
  NOR _106_ (
    .A(_051_),
    .B(_054_),
    .Y(_055_)
  );
  NAND _107_ (
    .A(_047_),
    .B(_050_),
    .Y(_056_)
  );
  NAND _108_ (
    .A(container[6]),
    .B(_055_),
    .Y(_057_)
  );
  NOR _109_ (
    .A(container[7]),
    .B(_057_),
    .Y(_058_)
  );
  NOR _110_ (
    .A(idle_in),
    .B(_058_),
    .Y(_059_)
  );
  NOR _111_ (
    .A(_044_),
    .B(_059_),
    .Y(_003_)
  );
  NAND _112_ (
    .A(container[7]),
    .B(_043_),
    .Y(_060_)
  );
  NOR _113_ (
    .A(BC_counter[2]),
    .B(container[6]),
    .Y(_061_)
  );
  NOR _114_ (
    .A(container[6]),
    .B(_060_),
    .Y(_062_)
  );
  NAND _115_ (
    .A(container[7]),
    .B(_061_),
    .Y(_063_)
  );
  NOR _116_ (
    .A(_056_),
    .B(_063_),
    .Y(_064_)
  );
  NAND _117_ (
    .A(_055_),
    .B(_062_),
    .Y(_065_)
  );
  NOR _118_ (
    .A(_045_),
    .B(_065_),
    .Y(_066_)
  );
  NAND _119_ (
    .A(BC_counter[0]),
    .B(_064_),
    .Y(_067_)
  );
  NAND _120_ (
    .A(_045_),
    .B(_065_),
    .Y(_068_)
  );
  NAND _121_ (
    .A(reset_s),
    .B(_068_),
    .Y(_069_)
  );
  NOR _122_ (
    .A(_066_),
    .B(_069_),
    .Y(_000_[0])
  );
  NOR _123_ (
    .A(_046_),
    .B(_067_),
    .Y(_070_)
  );
  NAND _124_ (
    .A(_046_),
    .B(_067_),
    .Y(_071_)
  );
  NAND _125_ (
    .A(reset_s),
    .B(_071_),
    .Y(_072_)
  );
  NOR _126_ (
    .A(_070_),
    .B(_072_),
    .Y(_000_[1])
  );
  NOR _127_ (
    .A(BC_counter[2]),
    .B(_070_),
    .Y(_073_)
  );
  NOR _128_ (
    .A(_044_),
    .B(_073_),
    .Y(_000_[2])
  );
  NOR _129_ (
    .A(_041_),
    .B(_042_),
    .Y(_074_)
  );
  NAND _130_ (
    .A(counter[0]),
    .B(counter[1]),
    .Y(_075_)
  );
  NAND _131_ (
    .A(counter[2]),
    .B(_074_),
    .Y(_076_)
  );
  NOT _132_ (
    .A(_076_),
    .Y(_077_)
  );
  NAND _133_ (
    .A(inserter_synt),
    .B(_077_),
    .Y(_078_)
  );
  NAND _134_ (
    .A(container[7]),
    .B(_076_),
    .Y(_079_)
  );
  NAND _135_ (
    .A(_078_),
    .B(_079_),
    .Y(_001_[7])
  );
  NOR _136_ (
    .A(counter[0]),
    .B(_042_),
    .Y(_080_)
  );
  NAND _137_ (
    .A(_041_),
    .B(counter[1]),
    .Y(_081_)
  );
  NOR _138_ (
    .A(_040_),
    .B(_081_),
    .Y(_082_)
  );
  NAND _139_ (
    .A(counter[2]),
    .B(_080_),
    .Y(_083_)
  );
  NAND _140_ (
    .A(inserter_synt),
    .B(_082_),
    .Y(_084_)
  );
  NAND _141_ (
    .A(container[6]),
    .B(_083_),
    .Y(_085_)
  );
  NAND _142_ (
    .A(_084_),
    .B(_085_),
    .Y(_001_[6])
  );
  NOR _143_ (
    .A(_041_),
    .B(counter[1]),
    .Y(_086_)
  );
  NAND _144_ (
    .A(counter[0]),
    .B(_042_),
    .Y(_087_)
  );
  NOR _145_ (
    .A(_040_),
    .B(_087_),
    .Y(_088_)
  );
  NAND _146_ (
    .A(counter[2]),
    .B(_086_),
    .Y(_089_)
  );
  NAND _147_ (
    .A(inserter_synt),
    .B(_088_),
    .Y(_012_)
  );
  NAND _148_ (
    .A(container[5]),
    .B(_089_),
    .Y(_013_)
  );
  NAND _149_ (
    .A(_012_),
    .B(_013_),
    .Y(_001_[5])
  );
  NOR _150_ (
    .A(counter[0]),
    .B(counter[1]),
    .Y(_014_)
  );
  NOT _151_ (
    .A(_014_),
    .Y(_015_)
  );
  NAND _152_ (
    .A(counter[2]),
    .B(_014_),
    .Y(_016_)
  );
  NOT _153_ (
    .A(_016_),
    .Y(_017_)
  );
  NAND _154_ (
    .A(inserter_synt),
    .B(_017_),
    .Y(_018_)
  );
  NAND _155_ (
    .A(container[4]),
    .B(_016_),
    .Y(_019_)
  );
  NAND _156_ (
    .A(_018_),
    .B(_019_),
    .Y(_001_[4])
  );
  NOR _157_ (
    .A(counter[2]),
    .B(_075_),
    .Y(_020_)
  );
  NOT _158_ (
    .A(_020_),
    .Y(_021_)
  );
  NAND _159_ (
    .A(inserter_synt),
    .B(_020_),
    .Y(_022_)
  );
  NAND _160_ (
    .A(container[3]),
    .B(_021_),
    .Y(_023_)
  );
  NAND _161_ (
    .A(_022_),
    .B(_023_),
    .Y(_001_[3])
  );
  NOR _162_ (
    .A(counter[2]),
    .B(_081_),
    .Y(_024_)
  );
  NAND _163_ (
    .A(_040_),
    .B(_080_),
    .Y(_025_)
  );
  NAND _164_ (
    .A(inserter_synt),
    .B(_024_),
    .Y(_026_)
  );
  NAND _165_ (
    .A(container[2]),
    .B(_025_),
    .Y(_027_)
  );
  NAND _166_ (
    .A(_026_),
    .B(_027_),
    .Y(_001_[2])
  );
  NOR _167_ (
    .A(counter[2]),
    .B(_087_),
    .Y(_028_)
  );
  NAND _168_ (
    .A(_040_),
    .B(_086_),
    .Y(_029_)
  );
  NAND _169_ (
    .A(inserter_synt),
    .B(_028_),
    .Y(_030_)
  );
  NAND _170_ (
    .A(container[1]),
    .B(_029_),
    .Y(_031_)
  );
  NAND _171_ (
    .A(_030_),
    .B(_031_),
    .Y(_001_[1])
  );
  NOR _172_ (
    .A(counter[2]),
    .B(_015_),
    .Y(_032_)
  );
  NAND _173_ (
    .A(_040_),
    .B(_014_),
    .Y(_033_)
  );
  NAND _174_ (
    .A(inserter_synt),
    .B(_032_),
    .Y(_034_)
  );
  NAND _175_ (
    .A(container[0]),
    .B(_033_),
    .Y(_035_)
  );
  NAND _176_ (
    .A(_034_),
    .B(_035_),
    .Y(_001_[0])
  );
  NOR _177_ (
    .A(counter[0]),
    .B(_044_),
    .Y(_002_[0])
  );
  NAND _178_ (
    .A(reset_s),
    .B(_075_),
    .Y(_036_)
  );
  NOR _179_ (
    .A(_014_),
    .B(_036_),
    .Y(_002_[1])
  );
  NAND _180_ (
    .A(_040_),
    .B(_075_),
    .Y(_037_)
  );
  NAND _181_ (
    .A(reset_s),
    .B(_037_),
    .Y(_038_)
  );
  NOR _182_ (
    .A(_077_),
    .B(_038_),
    .Y(_002_[2])
  );
  NAND _183_ (
    .A(BC_counter[2]),
    .B(idle_in),
    .Y(_039_)
  );
  NOT _184_ (
    .A(_039_),
    .Y(IDLE_OUT_synt_N)
  );
  NOT _185_ (
    .A(clk_32f),
    .Y(_005_)
  );
  NOT _186_ (
    .A(clk_32f),
    .Y(_006_)
  );
  NOT _187_ (
    .A(clk_32f),
    .Y(_007_)
  );
  NOT _188_ (
    .A(clk_32f),
    .Y(_008_)
  );
  NOT _189_ (
    .A(clk_32f),
    .Y(_009_)
  );
  NOT _190_ (
    .A(clk_32f),
    .Y(_010_)
  );
  NOT _191_ (
    .A(clk_32f),
    .Y(_011_)
  );
  (* src = "synth_serial_paralelo2.v:84" *)
  DFF _192_ (
    .C(clk_f),
    .D(IDLE_OUT_synt_N),
    .Q(IDLE_OUT_synt)
  );
  (* src = "synth_serial_paralelo2.v:49" *)
  DFF _193_ (
    .C(clk_4f),
    .D(_003_),
    .Q(idle_in)
  );
  (* src = "synth_serial_paralelo2.v:34" *)
  DFF _194_ (
    .C(clk_4f),
    .D(_000_[0]),
    .Q(BC_counter[0])
  );
  (* src = "synth_serial_paralelo2.v:34" *)
  DFF _195_ (
    .C(clk_4f),
    .D(_000_[1]),
    .Q(BC_counter[1])
  );
  (* src = "synth_serial_paralelo2.v:34" *)
  DFF _196_ (
    .C(clk_4f),
    .D(_000_[2]),
    .Q(BC_counter[2])
  );
  (* src = "synth_serial_paralelo2.v:29" *)
  DFF _197_ (
    .C(_004_),
    .D(_001_[0]),
    .Q(container[0])
  );
  (* src = "synth_serial_paralelo2.v:29" *)
  DFF _198_ (
    .C(_005_),
    .D(_001_[1]),
    .Q(container[1])
  );
  (* src = "synth_serial_paralelo2.v:29" *)
  DFF _199_ (
    .C(_006_),
    .D(_001_[2]),
    .Q(container[2])
  );
  (* src = "synth_serial_paralelo2.v:29" *)
  DFF _200_ (
    .C(_007_),
    .D(_001_[3]),
    .Q(container[3])
  );
  (* src = "synth_serial_paralelo2.v:29" *)
  DFF _201_ (
    .C(_008_),
    .D(_001_[4]),
    .Q(container[4])
  );
  (* src = "synth_serial_paralelo2.v:29" *)
  DFF _202_ (
    .C(_009_),
    .D(_001_[5]),
    .Q(container[5])
  );
  (* src = "synth_serial_paralelo2.v:29" *)
  DFF _203_ (
    .C(_010_),
    .D(_001_[6]),
    .Q(container[6])
  );
  (* src = "synth_serial_paralelo2.v:29" *)
  DFF _204_ (
    .C(_011_),
    .D(_001_[7]),
    .Q(container[7])
  );
  (* src = "synth_serial_paralelo2.v:20" *)
  DFF _205_ (
    .C(clk_32f),
    .D(_002_[0]),
    .Q(counter[0])
  );
  (* src = "synth_serial_paralelo2.v:20" *)
  DFF _206_ (
    .C(clk_32f),
    .D(_002_[1]),
    .Q(counter[1])
  );
  (* src = "synth_serial_paralelo2.v:20" *)
  DFF _207_ (
    .C(clk_32f),
    .D(_002_[2]),
    .Q(counter[2])
  );
  (* src = "synth_serial_paralelo2.v:16" *)
  DFF _208_ (
    .C(clk_4f),
    .D(reset),
    .Q(reset_s)
  );
endmodule
